<idea-plugin use-idea-classloader="true">
  <id>com.haskforce</id>
  <name>HaskForce</name>
  <idea-version since-build="173"/>
  <vendor url="https://github.com/carymrobbins/intellij-haskforce">HaskForce on GitHub</vendor>

  <description>Plugin for Haskell language support.</description>

  <change-notes><![CDATA[
    <p>
      <span style="color:red"><b>Warning:</b> You cannot use multiple Haskell plugins at the same time.</span>
      If you have installed a Haskell language plugin for IntelliJ be sure to uninstall it before
      installing this one.
    </p>
    <p>
      If you encounter any issues, please submit them on our
      <a href="https://github.com/carymrobbins/intellij-haskforce/issues">bug tracker</a>.
    </p>
    <p>
      <b>v0.3.41</b>
      <ul>
        <li>Use Scala 2.12 runtime (#348)</li>
      </ul>
    </p>
    <p>
      <b>v0.3.40</b>
      <ul>
        <li>Fix builder classpath (#342)</li>
      </ul>
    </p>
    <p>
      <b>v0.3.39</b>
      <ul>
        <li>Fix indentation parsing (#334)</li>
        <li>Fix errors in HaskellExternalAnnotator (#288)</li>
        <li>Improve spellchecking (#339)</li>
        <li>Added run configs for Etlas (#302)</li>
        <li>Highlight unknown or unused symbols with ghc-mod</li>
        <li>Complete function names in declaration position</li>
        <li>Reload completion cache on user invocation</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.38</b>
      <ul>
        <li>Ensure all output gets processed when building with stack (#325)</li>
        <li>Don't notify for git errors (#324)</li>
        <li>Create Etlas project and builder (#302)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.37</b>
      <ul>
        <li>Help ghc-mod find stack (#318, #285)</li>
        <li>Exclude .stack-work from sources (#321)</li>
        <li>Don't report typos more than once (#320)</li>
        <li>Parse Eta syntax (#302)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.36</b>
      <ul>
        <li>Fix Java 6 builder conflict (#278)</li>
        <li>Parse extraneous commas in export/import lists (#284)</li>
        <li>Fix read lock error (#271)</li>
        <li>Strip HTML tags from ghc-modi 'killing' console message (#287)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.35</b>
      <ul>
        <li>Make HLint aware of extensions from Cabal file (#56)</li>
        <li>Parse qualified operators in patterns (#218)</li>
        <li>Parse 'do rec' syntax (#264)</li>
        <li>Parse pragma-only files (#267)</li>
        <li>Upgraded Grammar-Kit to 1.4.1</li>
        <li>Upgraded JFlex to 1.7.0</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.34</b>
      <ul>
        <li>Fix external builder issue (#282)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.33</b>
      <ul>
        <li>Require Java 8 (#281)
          <ul>
            <li>The boot JDK for IntelliJ must be running Java 8
              (already required for IDEA 2016.1)
            </li>
            <li>Fixes problems with building Java 6 projects (#278)</li>
          </ul>
        </li>
        <li>Improved Cabal file support (#169)
          <ul>
            <li>Implemented a proper Cabal parser</li>
            <li>GHC extensions autocompletion</li>
            <li>Jump to source for modules listed in exported-modules</li>
            <li>Determine source roots from Cabal file during Stack project import</li>
          </ul>
        </li>
        <li>Properly dispose HaskellToolsConsole (#269)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.32</b>
      <ul>
        <li>Hindent support (#274)</li>
        <li>Fix NPE caused by ghc-modi (#266)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.31</b>
      <ul>
        <li>Fixed issues with ghc-mod halting the IDE (#259)</li>
        <li>Don't terminate ghc-modi on type info error (#261)</li>
        <li>Allow 'location' values in stack.yaml packages (#263)</li>
        <li>Show working directory in tools console (#251)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.30</b>
      <ul>
        <li>Fix "expand selection" feature to work with lists (#246)</li>
        <li>Handle missing "packages" field in stack.yaml (#248)</li>
        <li>Validate that project names do not contain whitespace (#252)</li>
        <li>New "Haskell Stack Run" configuration (#252)</li>
        <li>Added Haskell Tools Console (#237)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.29</b>
      <ul>
        <li>Use `hlint --no-exit-code` to avoid failing on lint warnings (#244)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.28</b>
      <ul>
        <li>Show build tool config errors in new project dialog</li>
        <li>Parse boolean fields in stack.yaml</li>
        <li>Improved external tool error reporting</li>
        <li>Internal refactors to improve ghc-mod/hlint error highlighting</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.27</b>
      <ul>
        <li>Warn if ghc-mod is compiled with a different version of GHC (#219)</li>
        <li>Ghc-mod now executes in Stack context if applicable (#229)</li>
        <li>Fixed halted IDE when modifying class constraints (#228)</li>
        <li>Fixed importing Stack project at `.` directory (#230)</li>
        <li>Fixed IndexOutOfBounds exception during indexing (#164)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.26</b>
      <ul>
        <li>Don't override user-specified ghc-modi flags, thanks to @adinapoli (#224)</li>
        <li>Don't attempt to parse directories as stack.yaml (#216, #227)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.25</b>
      <ul>
        <li>Bug fixes and minor refactoring</li>
        <li>Fix type info errors (#204)</li>
        <li>Fix autocompletion when hiding names (#209)</li>
        <li>Fix ghc-mod parse error messages (#212)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.24</b>
      <ul>
        <li>Added stack support (#167)</li>
        <li>Added ghc-mod 5.4 support (#182)</li>
        <li>Parse numeric escapes (#196) and haddock comments (#198)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.23</b>
      <ul>
        <li>Add spellchecker support (#197)</li>
        <li>Fix redundant dashes when splitting comments (#199)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.22</b>
      <ul>
        <li>Parser improvements: InstanceSigs, MINIMAL pragma for class definitions, and qualified
          expressions in
          ViewPatterns, relaxed let expressions.
        </li>
        <li>Autocompletion no longer includes keywords where not applicable.</li>
        <li>Go to definition for exported modules, re-exported functions, and type definitions,
          thanks to @charleso.
        </li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.21</b>
      <ul>
        <li>Type info action only applies to Haskell files (#156)</li>
        <li>ghc-mod completion optimizations</li>
        <li>Added Add Cabal Package and Discover Cabal Packages actions</li>
        <li>Enhanced the new project wizard to configure tools and Cabal package settings</li>
        <li>Resolved hlint annotation issue (#121)</li>
        <li>Honor NoImplicitPrelude pragma for autocompletion</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.20</b>
      <ul>
        <li>Added jump to definition for local variables</li>
        <li>Resolved type info action traceback (#135)</li>
        <li>Updated new project wizard to prompt for SDK (#141)</li>
        <li>Improved operator and comment parsing (#152)</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.19</b>
      <ul>
        <li>Updated ghc-mod(i) integration to use the user-specified GHC and Cabal.</li>
        <li>Highlight mdo and rec as keywords (#120)</li>
        <li>Improved string escape parsing (#111)</li>
        <li>Parse forall in data declarations (#132)</li>
        <li>Parse PACK/UNPACK pragmas for GADTs</li>
        <li>Handle leading slash for QuasiQuote language injections.</li>
        <li>Updated icons for retina display</li>
      </ul>
    </p>
    <p>
      <b>v0.3-beta.18</b>
      <ul>
        <li>Implemented <b>Type Info</b> action. (#90)</li>
        <li>Implemented language injections for QuasiQuotes.</li>
        <li>Improved import completion with aliased modules.</li>
        <li>Improved <b>Restart ghc-modi</b> action. (#103)</li>
        <li>Implemented creation of subdirectories for create file action, e.g. <b>Foo.Bar.Baz</b>
          creates <b>Foo/Bar/Baz.hs</b></li>
        <li>Fixed hash operator parsing. (#106)</li>
        <li>Improved RankNTypes support. (#92)</li>
        <li>Improved Windows support. (#108, #109)</li>
      </ul>
      <b>v0.3-beta.17</b>
      <ul>
        <li>Implemented closed type families.</li>
        <li>Implemented jump to function/variable declarations without type signatures.</li>
        <li>Added module path creation when creating a new file as `Path.To.Module`.</li>
      </ul>
      <b>v0.3-beta.16</b>
      <ul>
        <li>Improved ghc-modi integration.</li>
      </ul>
      <b>v0.3-beta.15</b>
      <ul>
        <li>Implemented FunctionalDependencies.</li>
        <li>Removed dependency on Apache commons-lang.</li>
      </ul>
      <b>v0.3-beta.14</b>
      <ul>
        <li>Implemented RankNTypes for type declarations. (#92)</li>
      </ul>
      <b>v0.3-beta.13</b>
      <ul>
        <li>Resolved parser issues with partial case expressions. (#82)</li>
      </ul>
      <b>v0.3-beta.12</b>
      <ul>
        <li>Improved "Go to symbol" by indexing declarations.</li>
        <li>Resolved bug with ghc-modi blocking. (#91)</li>
        <li>Prevent ghc-modi from restarting when it terminates unexpectedly.</li>
        <li>Added a "Restart ghc-modi" action to give the user control over when to restart
          ghc-modi.
        </li>
      </ul>
      <b>v0.3-beta.11</b>
      <ul>
        <li>Fixed duplicate error messages from ghc-modi.</li>
        <li>Improved performance of jump to declaration.</li>
        <li>Added UnicodeSyntax support.</li>
        <li>Added MagicHash syntax support.</li>
        <li>Added tab settings under Code Style settings.</li>
        <li>Run configurations now verify cabal version.</li>
      </ul>
      <b>v0.3-beta.10</b>
      <ul>
        <li>Added support for jumping to data and newtype constructor definitions.</li>
        <li>Jump to definition will resolve based on your imports.</li>
        <li>Multi-resolve now displays module names.</li>
        <li>Completion takes into account explicit and hiding imports.</li>
        <li>Reference completion now displays module name instead of file name.</li>
      </ul>
      </p>
      <p>
        <b>v0.3-beta.9</b>
      <ul>
        <li>Fixed auto-add type signature intention on Windows. (issue #79)</li>
        <li>Fixed ignore hlint intention on Windows. (issue #59)</li>
      </ul>
    </p>
    ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <component>
      <implementation-class>
        com.haskforce.codeInsight.HaskellCompletionCacheLoader
      </implementation-class>
    </component>
  </project-components>

  <actions>
    <action id="Haskell.NewHaskellFile" class="com.haskforce.actions.CreateHaskellFileAction"
            text="Haskell File" description="Create new Haskell file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    <action id="HaskForce.StylishFormat"
            class="com.haskforce.actions.HaskellStylishFormatAction"
            text="Reformat code with Stylish Haskell"
            description="Format current file with Stylish-Haskell formatter">
      <add-to-group group-id="CodeFormatGroup" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt E"/>
    </action>
    <action id="HaskForce.HindentFormat"
            class="com.haskforce.actions.HaskellHindentFormatAction"
            text="Reformat code with Hindent"
            description="Format current file with Hindent">
      <add-to-group group-id="CodeFormatGroup" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt D"/>
    </action>
    <action id="com.haskforce.actions.RestartGhcModi" class="com.haskforce.actions.RestartGhcModi"
            text="Restart ghc-modi" description="Restarts a disabled ghc-modi process">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>
    <action id="TypeInfo" class="com.haskforce.actions.TypeInfoAction" text="Type Info">
      <add-to-group group-id="ViewMenu" anchor="first"/>
      <keyboard-shortcut first-keystroke="F11" keymap="Mac OS X"/>
      <keyboard-shortcut first-keystroke="F11" keymap="Mac OS X 10.5+"/>
      <keyboard-shortcut first-keystroke="alt EQUALS" keymap="$default"/>
    </action>
    <action id="com.haskforce.actions.cabal.AddCabalPackageAction"
            class="com.haskforce.actions.cabal.AddCabalPackageAction"
            text="Add Cabal Package"
            description="Adds a cabal file to your project and configures it as an IntelliJ module.">
      <add-to-group group-id="ToolsMenu" anchor="first"/>
    </action>
    <action id="com.haskforce.actions.cabal.DiscoverCabalPackagesAction"
            class="com.haskforce.actions.cabal.DiscoverCabalPackagesAction"
            text="Discover Cabal Packages"
            description="Finds Cabal packages in your project and imports them as Haskell modules.">
      <add-to-group group-id="ToolsMenu" anchor="first"/>
    </action>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- Haskell support -->
    <projectTemplatesFactory implementation="com.haskforce.haskell.project.template.HaskellProjectTemplatesFactory"/>
    <internalFileTemplate name="Haskell Module"/>
    <moduleType id="HASKELL_MODULE" implementationClass="com.haskforce.HaskellModuleType"/>
    <sdkType implementation="com.haskforce.HaskellSdkType"/>
    <fileTypeFactory implementation="com.haskforce.HaskellFileTypeFactory"/>
    <lang.syntaxHighlighterFactory language="Haskell"
                                   implementationClass="com.haskforce.highlighting.HaskellSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Haskell"
                           implementationClass="com.haskforce.HaskellParserDefinition"/>
    <lang.documentationProvider language="Haskell"
                                implementationClass="com.haskforce.highlighting.annotation.HaskellDocumentationProvider"/>
    <annotator language="Haskell"
               implementationClass="com.haskforce.highlighting.HaskellAnnotator"/>
    <externalAnnotator language="Haskell"
                       implementationClass="com.haskforce.highlighting.annotation.external.HaskellExternalAnnotator"/>
    <configurationType implementation="com.haskforce.run.HaskellApplicationConfigurationType"/>
    <configurationType implementation="com.haskforce.run.HaskellTestConfigurationType"/>
    <configurationType implementation="com.haskforce.run.stack.StackApplicationConfigurationType"/>
    <programRunner implementation="com.haskforce.run.HaskellRunner"/>
    <codeStyleSettingsProvider
        implementation="com.haskforce.language.formatting.HaskellCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider
        implementation="com.haskforce.language.formatting.HaskellLanguageCodeStyleSettingsProvider"/>

    <!-- Eta support -->
    <moduleType id="ETLAS_MODULE" implementationClass="com.haskforce.eta.project.module.EtlasModuleType"/>
    <projectConfigurable instance="com.haskforce.eta.settings.EtaCompilerConfigurable"
                         parentId="project.propCompiler" id="Eta compiler"
                         displayName="Eta Compiler"/>
    <projectService serviceImplementation="com.haskforce.eta.settings.EtaBuildSettings"/>
    <configurationType implementation="com.haskforce.eta.run.EtlasConfigurationType"/>
    <runConfigurationProducer implementation="com.haskforce.eta.run.EtlasRunConfigurationProducer"/>

    <!-- Language injections -->
    <lang.elementManipulator forClass="com.haskforce.psi.HaskellQqblob"
                             implementationClass="com.haskforce.psi.impl.HaskellQqblobManipulator"/>

    <!-- Indexes -->
    <fileBasedIndex implementation="com.haskforce.index.HaskellModuleIndex"/>
    <stubIndex implementation="com.haskforce.stubs.index.HaskellAllNameIndex"/>

    <!-- Editing utils -->
    <lang.braceMatcher language="Haskell"
                       implementationClass="com.haskforce.features.HaskellBraceMatcher"/>
    <lang.commenter language="Haskell"
                    implementationClass="com.haskforce.features.HaskellCommenter"/>
    <quoteHandler fileType="Haskell" className="com.haskforce.features.HaskellQuoteHandler"/>
    <typedHandler implementation="com.haskforce.features.HaskellTypedHandler" id="HaskellFile"/>
    <lang.foldingBuilder language="Haskell"
                         implementationClass="com.haskforce.features.HaskellFoldingBuilder"/>
    <elementDescriptionProvider implementation="com.haskforce.features.HaskellDescriptionProvider"/>
    <completion.contributor language="Haskell"
                            implementationClass="com.haskforce.codeInsight.HaskellCompletionContributor"/>

    <!-- References/navigation -->
    <codeInsight.lineMarkerProvider language="Haskell"
                                    implementationClass="com.haskforce.codeInsight.HaskellLineMarkerProvider"/>
    <psi.referenceContributor
        implementation="com.haskforce.psi.references.HaskellReferenceContributor"/>
    <lang.findUsagesProvider language="Haskell"
                             implementationClass="com.haskforce.codeInsight.HaskellFindUsagesProvider"/>
    <gotoSymbolContributor implementation="com.haskforce.features.HaskellChooseByNameContributor"/>

    <!-- Language utilities -->
    <lang.namesValidator language="Haskell"
                         implementationClass="com.haskforce.language.HaskellNamesValidator"/>

    <!-- Refactoring -->
    <lang.refactoringSupport language="Haskell"
                             implementationClass="com.haskforce.refactoring.HaskellRefactoringSupportProvider"/>
    <renamePsiElementProcessor
        implementation="com.haskforce.refactoring.HaskellRenamePsiElementProcessor"/>

    <!-- Structure view on the left pane -->
    <lang.psiStructureViewFactory language="Haskell"
                                  implementationClass="com.haskforce.features.structureview.HaskellStructureViewFactory"/>

    <!-- Project settings -->

    <!-- Tab under compiler in IntelliJ -> Preferences -->
    <projectConfigurable instance="com.haskforce.settings.HaskellCompilerConfigurable"
                         parentId="project.propCompiler" id="Haskell compiler"
                         displayName="Haskell Compiler"/>
    <!-- Persistent data + build server communication for compiler settings -->
    <projectService serviceImplementation="com.haskforce.settings.HaskellBuildSettings"/>
    <!-- Tab in IntelliJ -> Preferences -->
    <projectConfigurable instance="com.haskforce.settings.HaskellToolsConfigurable"/>

    <!-- File -> Project Structure dialogue. -->
    <moduleConfigurationEditorProvider
        implementation="com.haskforce.settings.HaskellModuleConfigurationEditor" order="first"/>
    <moduleConfigurationEditorProvider
        implementation="com.haskforce.eta.project.module.EtlasModuleConfigurationEditor"/>

    <!-- Tab in IntelliJ -> Preferences -->
    <colorSettingsPage implementation="com.haskforce.settings.HaskellColorSettingsPage"/>
    <colorSettingsPage implementation="com.haskforce.settings.CabalColorSettingsPage"/>

    <!-- Tool windows -->
    <toolWindow id="Haskell Tools Console" anchor="bottom"
                icon="/icons/haskell-13px.png"
                factoryClass="com.haskforce.ui.tools.HaskellToolsConsoleWindowFactory"
                conditionClass="com.haskforce.ui.tools.HaskellToolsConsoleWindowFactory"/>

    <!-- Cabal support -->
    <fileTypeFactory implementation="com.haskforce.cabal.CabalFileTypeFactory"/>
    <lang.commenter language="Cabal" implementationClass="com.haskforce.cabal.CabalCommenter"/>
    <lang.syntaxHighlighterFactory language="Cabal"
                                   implementationClass="com.haskforce.cabal.highlighting.CabalSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Cabal"
                           implementationClass="com.haskforce.cabal.lang.parser.CabalParserDefinition"/>
    <annotator language="Cabal"
               implementationClass="com.haskforce.cabal.highlighting.CabalAnnotator"/>
    <completion.contributor
        language="Cabal"
        implementationClass="com.haskforce.cabal.completion.CabalCompletionContributor" />

    <!-- Hamlet support -->
    <fileTypeFactory implementation="com.haskforce.yesod.shakespeare.hamlet.HamletFileTypeFactory"/>
    <lang.syntaxHighlighterFactory language="Hamlet"
                                   implementationClass="com.haskforce.yesod.shakespeare.hamlet.highlighting.HamletSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Hamlet"
                           implementationClass="com.haskforce.yesod.shakespeare.hamlet.HamletParserDefinition"/>

    <!-- Spelling support -->
    <spellchecker.support language="Haskell"
                          implementationClass="com.haskforce.spellchecker.HaskellSpellcheckingStrategy"/>
    <spellchecker.support language="Cabal"
                          implementationClass="com.haskforce.spellchecker.HaskellSpellcheckingStrategy"/>
    <spellchecker.bundledDictionaryProvider
        implementation="com.haskforce.spellchecker.HaskellBundledDictionaryProvider"/>

    <projectImportProvider
        implementation="com.haskforce.importWizard.stack.StackProjectImportProvider"/>
    <projectImportBuilder
        implementation="com.haskforce.importWizard.stack.StackProjectImportBuilder"/>

    <!-- External builder support -->
    <!-- Note that the classpath is needed for plugin deployment to export a zip archive. -->
    <compileServer.plugin classpath="jps-plugin.jar;jps-shared.jar;scala-library-2.12.4.jar;scala-reflect-2.12.4.jar;scalaz-core_2.12-7.2.17.jar;snakeyaml-1.16.jar;newtype_2.12-0.1.0.jar"/>
  </extensions>
  <module-components>
    <component>
      <implementation-class>com.haskforce.highlighting.annotation.external.GhcModi</implementation-class>
      <interface-class>com.haskforce.highlighting.annotation.external.GhcModi</interface-class>
    </component>
  </module-components>
</idea-plugin>
