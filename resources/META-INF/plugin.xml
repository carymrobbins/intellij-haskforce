<idea-plugin>
  <id>com.haskforce</id>
  <name>HaskForce</name>
  <vendor url="https://github.com/carymrobbins/intellij-haskforce">HaskForce on GitHub</vendor>

  <description>Plugin for Haskell language support.</description>

  <depends>org.jetbrains.plugins.yaml</depends>


  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <depends>com.intellij.modules.java</depends>
  <depends>com.intellij.modules.externalSystem</depends>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <actions>
    <action id="Haskell.NewHaskellFile" class="com.haskforce.actions.CreateHaskellFileAction"
            text="Haskell File" description="Create new Haskell file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    <action id="HaskForce.StylishFormat"
            class="com.haskforce.actions.HaskellStylishFormatAction"
            text="Reformat code with Stylish Haskell"
            description="Format current file with Stylish-Haskell formatter">
      <add-to-group group-id="CodeFormatGroup" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt E"/>
    </action>
    <action id="HaskForce.HindentFormat"
            class="com.haskforce.actions.HaskellHindentFormatAction"
            text="Reformat code with Hindent"
            description="Format current file with Hindent">
      <add-to-group group-id="CodeFormatGroup" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt D"/>
    </action>
    <action id="com.haskforce.actions.RestartGhcModi" class="com.haskforce.actions.RestartGhcModi"
            text="Restart ghc-modi" description="Restarts a disabled ghc-modi process">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>
    <action id="TypeInfo" class="com.haskforce.actions.TypeInfoAction" text="Type Info">
      <add-to-group group-id="ViewMenu" anchor="first"/>
      <keyboard-shortcut first-keystroke="F11" keymap="Mac OS X"/>
      <keyboard-shortcut first-keystroke="F11" keymap="Mac OS X 10.5+"/>
      <keyboard-shortcut first-keystroke="alt EQUALS" keymap="$default"/>
    </action>
    <action id="com.haskforce.actions.cabal.AddCabalPackageAction"
            class="com.haskforce.actions.cabal.AddCabalPackageAction"
            text="Add Cabal Package"
            description="Adds a cabal file to your project and configures it as an IntelliJ module.">
      <add-to-group group-id="ToolsMenu" anchor="first"/>
    </action>
    <action id="com.haskforce.actions.cabal.DiscoverCabalPackagesAction"
            class="com.haskforce.actions.cabal.DiscoverCabalPackagesAction"
            text="Discover Cabal Packages"
            description="Finds Cabal packages in your project and imports them as Haskell modules.">
      <add-to-group group-id="ToolsMenu" anchor="first"/>
    </action>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
      <applicationInitializedListener implementation="com.haskforce.ide.HaskForceInitializedListener"/>
    <!-- Haskell support -->
    <projectTemplatesFactory implementation="com.haskforce.haskell.project.template.HaskellProjectTemplatesFactory"/>
    <internalFileTemplate name="Haskell Module"/>
    <moduleType id="HASKELL_MODULE" implementationClass="com.haskforce.HaskellModuleType"/>
    <sdkType implementation="com.haskforce.HaskellSdkType"/>
    <fileTypeFactory implementation="com.haskforce.HaskellFileTypeFactory"/>
    <lang.syntaxHighlighterFactory language="Haskell"
                                   implementationClass="com.haskforce.highlighting.HaskellSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Haskell"
                           implementationClass="com.haskforce.HaskellParserDefinition"/>
    <lang.documentationProvider language="Haskell"
                                implementationClass="com.haskforce.highlighting.annotation.HaskellDocumentationProvider"/>
    <annotator language="Haskell"
               implementationClass="com.haskforce.highlighting.HaskellAnnotator"/>
    <externalAnnotator language="Haskell"
                       implementationClass="com.haskforce.highlighting.annotation.external.HaskellExternalAnnotator"/>
    <configurationType implementation="com.haskforce.run.HaskellApplicationConfigurationType"/>
    <configurationType implementation="com.haskforce.run.HaskellTestConfigurationType"/>
    <configurationType implementation="com.haskforce.run.stack.application.StackApplicationConfigurationType"/>
    <configurationType implementation="com.haskforce.run.stack.task.StackTaskConfigurationType"/>
    <programRunner implementation="com.haskforce.run.HaskellRunner"/>
    <codeStyleSettingsProvider
        implementation="com.haskforce.language.formatting.HaskellCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider
        implementation="com.haskforce.language.formatting.HaskellLanguageCodeStyleSettingsProvider"/>
    <highlightErrorFilter implementation="com.haskforce.codeInsight.highlighting.HaskellHighlightErrorFilter"/>
    <!-- Cache-->
    <projectService serviceImplementation="com.haskforce.codeInsight.HaskellCompletionCacheService"/>
    <projectService serviceImplementation="com.haskforce.tooling.ghcPkg.GhcPkgDumpProjectCacheService"/>

    <!-- Language injections -->
    <lang.elementManipulator forClass="com.haskforce.psi.HaskellQqblob"
                             implementationClass="com.haskforce.psi.impl.HaskellQqblobManipulator"/>

    <!-- Indexes -->
    <fileBasedIndex implementation="com.haskforce.index.HaskellModuleIndex"/>
    <stubIndex implementation="com.haskforce.stubs.index.HaskellAllNameIndex"/>

    <!-- Editing utils -->
    <lang.braceMatcher language="Haskell"
                       implementationClass="com.haskforce.features.HaskellBraceMatcher"/>
    <lang.commenter language="Haskell"
                    implementationClass="com.haskforce.features.HaskellCommenter"/>
    <quoteHandler fileType="Haskell" className="com.haskforce.features.HaskellQuoteHandler"/>
    <typedHandler implementation="com.haskforce.features.HaskellTypedHandler" id="HaskellFile"/>
    <lang.foldingBuilder language="Haskell"
                         implementationClass="com.haskforce.features.HaskellFoldingBuilder"/>
    <elementDescriptionProvider implementation="com.haskforce.features.HaskellDescriptionProvider"/>
    <completion.contributor language="Haskell"
                            implementationClass="com.haskforce.codeInsight.HaskellCompletionContributor"/>

    <!-- References/navigation -->
    <psi.referenceContributor
        implementation="com.haskforce.psi.references.HaskellReferenceContributor"/>
    <lang.findUsagesProvider language="Haskell"
                             implementationClass="com.haskforce.codeInsight.HaskellFindUsagesProvider"/>
    <gotoSymbolContributor implementation="com.haskforce.features.HaskellChooseByNameContributor"/>

    <!-- Language utilities -->
    <lang.namesValidator language="Haskell"
                         implementationClass="com.haskforce.language.HaskellNamesValidator"/>

    <!-- Refactoring -->
    <lang.refactoringSupport language="Haskell"
                             implementationClass="com.haskforce.refactoring.HaskellRefactoringSupportProvider"/>
    <renamePsiElementProcessor
        implementation="com.haskforce.refactoring.HaskellRenamePsiElementProcessor"/>

    <!-- Structure view on the left pane -->
    <lang.psiStructureViewFactory language="Haskell"
                                  implementationClass="com.haskforce.features.structureview.HaskellStructureViewFactory"/>

    <!-- Project settings -->

    <!-- Tab under compiler in IntelliJ -> Preferences -->
    <projectConfigurable instance="com.haskforce.settings.HaskellCompilerConfigurable"
                         parentId="project.propCompiler" id="Haskell compiler"
                         displayName="Haskell Compiler"/>
    <!-- Persistent data + build server communication for compiler settings -->
    <projectService serviceImplementation="com.haskforce.settings.HaskellBuildSettings"/>

    <!-- Tab in IntelliJ -> Preferences -->
    <projectConfigurable instance="com.haskforce.settings.HaskellToolsConfigurable"/>

    <projectConfigurable
      instance="com.haskforce.settings.experimental.HaskForceExperimentalConfigurable"
      groupId="language"
    />

    <!-- File -> Project Structure dialogue. -->
    <moduleConfigurationEditorProvider
        implementation="com.haskforce.settings.HaskellModuleConfigurationEditor" order="first"/>

    <!-- Tab in IntelliJ -> Preferences -->
    <colorSettingsPage implementation="com.haskforce.settings.HaskellColorSettingsPage"/>
    <colorSettingsPage implementation="com.haskforce.settings.CabalColorSettingsPage"/>

    <!-- Tool windows -->
    <toolWindow id="Haskell Tools Console" anchor="bottom"
                icon="/icons/haskell-13px.png"
                factoryClass="com.haskforce.ui.tools.HaskellToolsConsoleWindowFactory"
                conditionClass="com.haskforce.ui.tools.HaskellToolsConsoleWindowFactory"/>

    <!-- Cabal support -->
    <fileTypeFactory implementation="com.haskforce.cabal.CabalFileTypeFactory"/>
    <lang.commenter language="Cabal" implementationClass="com.haskforce.cabal.CabalCommenter"/>
    <lang.syntaxHighlighterFactory language="Cabal"
                                   implementationClass="com.haskforce.cabal.highlighting.CabalSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Cabal"
                           implementationClass="com.haskforce.cabal.lang.parser.CabalParserDefinition"/>
    <annotator language="Cabal"
               implementationClass="com.haskforce.cabal.highlighting.CabalAnnotator"/>
    <completion.contributor
        language="Cabal"
        implementationClass="com.haskforce.cabal.completion.CabalCompletionContributor" />

    <!-- Hamlet support -->
    <fileTypeFactory implementation="com.haskforce.yesod.shakespeare.hamlet.HamletFileTypeFactory"/>
    <lang.syntaxHighlighterFactory language="Hamlet"
                                   implementationClass="com.haskforce.yesod.shakespeare.hamlet.highlighting.HamletSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Hamlet"
                           implementationClass="com.haskforce.yesod.shakespeare.hamlet.HamletParserDefinition"/>

    <!-- Spelling support -->
    <spellchecker.support language="Haskell"
                          implementationClass="com.haskforce.spellchecker.HaskellSpellcheckingStrategy"/>
    <spellchecker.support language="Cabal"
                          implementationClass="com.haskforce.spellchecker.HaskellSpellcheckingStrategy"/>
    <spellchecker.bundledDictionaryProvider
        implementation="com.haskforce.spellchecker.HaskellBundledDictionaryProvider"/>


    <directoryIndexExcludePolicy
      implementation="com.haskforce.haskell.roots.HaskellDirectoryIndexExcludePolicy"/>

    <!-- Stack support -->
    <externalSystemManager implementation="com.haskforce.haskell.project.externalSystem.stack.StackManager"/>
    <externalIconProvider implementationClass="com.haskforce.haskell.project.externalSystem.stack.StackIconProvider"/>
    <externalSystemTaskNotificationListener implementation="com.haskforce.haskell.project.externalSystem.stack.StackProjectImportNotificationListener"/>
    <externalSystemSettingsListener implementation="com.haskforce.haskell.project.externalSystem.stack.StackProjectSettingsUpdater"/>
    <externalSystemConfigLocator implementation="com.haskforce.haskell.project.externalSystem.stack.StackConfigLocator"/>
<!--    <externalSystemExecutionConsoleManager-->
<!--      implementation="com.haskforce.haskell.project.externalSystem.stack.StackExecutionConsoleManager"/>-->
<!--    <projectImportBuilder-->
<!--      implementation="com.haskforce.haskell.project.externalSystem.stack.StackProjectImportBuilder"/>-->
<!--    <projectImportProvider-->
<!--      implementation="com.haskforce.haskell.project.externalSystem.stack.StackProjectImportProvider"/>-->

    <!-- TODO: REMOVE ME
    <projectImportProvider
        implementation="com.haskforce.importWizard.stack.StackProjectImportProvider"/>
    <projectImportBuilder
        implementation="com.haskforce.importWizard.stack.StackProjectImportBuilder"/>
    -->

    <!-- External builder support -->
    <!-- Note that the classpath is needed for plugin deployment to export a zip archive. -->
    <compileServer.plugin classpath="jps-plugin.jar;jps-shared.jar"/>
    <buildProcess.parametersProvider implementation="com.haskforce.HaskForceBuildProcessParametersProvider"/>
  </extensions>
  <module-components>
    <component>
      <implementation-class>com.haskforce.highlighting.annotation.external.GhcModi</implementation-class>
      <interface-class>com.haskforce.highlighting.annotation.external.GhcModi</interface-class>
    </component>
  </module-components>
</idea-plugin>
