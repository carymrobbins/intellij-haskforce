package com.haskforce.haskell.constants

import java.util

import com.intellij.codeInsight.lookup.LookupElement

import com.haskforce.haskell.codeInsight.LookupElementUtil

/** Language extensions supported by GHC. */
object GhcLanguageExtensions extends Enumeration {

  /** Safer and more efficient alternative to withName() */
  def get(name: String): Option[Value] = Option(mapping.get(name))

  /** Negates the extension value, either adding or removing the "No" prefix, if applicable. */
  def negate(v: Value): Option[Value] = {
    if (v.toString.startsWith("No")) get(v.toString.substring(2)) else get("No" + v.toString)
  }

  /** Retrieve the extensions as LookupElements for completion contributors. */
  lazy val asLookupElements: java.lang.Iterable[LookupElement] = {
    val list = new util.ArrayList[LookupElement](values.size)
    values.foreach { x =>
      list.add(LookupElementUtil.fromString(x.toString))
    }
    list
  }

  /** Pre-computed names as an array. */
  lazy val stringArray: Array[String] = values.view.map(_.toString).toArray

  /** Provide faster lookups using a HashMap as opposed to withName(). */
  private lazy val mapping = {
    val m = new util.HashMap[String, Value](values.size)
    values.foreach { v => m.put(v.toString, v) }
    m
  }

  /** Extensions list generated from 'ghc-mod lang' */
  val
    Haskell98,
    Haskell2010,
    Unsafe,
    Trustworthy,
    Safe,
    AllowAmbiguousTypes,
    NoAllowAmbiguousTypes,
    AlternativeLayoutRule,
    NoAlternativeLayoutRule,
    AlternativeLayoutRuleTransitional,
    NoAlternativeLayoutRuleTransitional,
    Arrows,
    NoArrows,
    AutoDeriveTypeable,
    NoAutoDeriveTypeable,
    BangPatterns,
    NoBangPatterns,
    BinaryLiterals,
    NoBinaryLiterals,
    CApiFFI,
    NoCApiFFI,
    CPP,
    NoCPP,
    ConstrainedClassMethods,
    NoConstrainedClassMethods,
    ConstraintKinds,
    NoConstraintKinds,
    DataKinds,
    NoDataKinds,
    DatatypeContexts,
    NoDatatypeContexts,
    DefaultSignatures,
    NoDefaultSignatures,
    DeriveAnyClass,
    NoDeriveAnyClass,
    DeriveDataTypeable,
    NoDeriveDataTypeable,
    DeriveFoldable,
    NoDeriveFoldable,
    DeriveFunctor,
    NoDeriveFunctor,
    DeriveGeneric,
    NoDeriveGeneric,
    DeriveTraversable,
    NoDeriveTraversable,
    DisambiguateRecordFields,
    NoDisambiguateRecordFields,
    DoAndIfThenElse,
    NoDoAndIfThenElse,
    DoRec,
    NoDoRec,
    EmptyCase,
    NoEmptyCase,
    EmptyDataDecls,
    NoEmptyDataDecls,
    ExistentialQuantification,
    NoExistentialQuantification,
    ExplicitForAll,
    NoExplicitForAll,
    ExplicitNamespaces,
    NoExplicitNamespaces,
    ExtendedDefaultRules,
    NoExtendedDefaultRules,
    FlexibleContexts,
    NoFlexibleContexts,
    FlexibleInstances,
    NoFlexibleInstances,
    ForeignFunctionInterface,
    NoForeignFunctionInterface,
    FunctionalDependencies,
    NoFunctionalDependencies,
    GADTSyntax,
    NoGADTSyntax,
    GADTs,
    NoGADTs,
    GHCForeignImportPrim,
    NoGHCForeignImportPrim,
    GeneralizedNewtypeDeriving,
    NoGeneralizedNewtypeDeriving,
    ImplicitParams,
    NoImplicitParams,
    ImplicitPrelude,
    NoImplicitPrelude,
    ImpredicativeTypes,
    NoImpredicativeTypes,
    IncoherentInstances,
    NoIncoherentInstances,
    InstanceSigs,
    NoInstanceSigs,
    InterruptibleFFI,
    NoInterruptibleFFI,
    JavaScriptFFI,
    NoJavaScriptFFI,
    KindSignatures,
    NoKindSignatures,
    LambdaCase,
    NoLambdaCase,
    LiberalTypeSynonyms,
    NoLiberalTypeSynonyms,
    MagicHash,
    NoMagicHash,
    MonadComprehensions,
    NoMonadComprehensions,
    MonoLocalBinds,
    NoMonoLocalBinds,
    MonoPatBinds,
    NoMonoPatBinds,
    MonomorphismRestriction,
    NoMonomorphismRestriction,
    MultiParamTypeClasses,
    NoMultiParamTypeClasses,
    MultiWayIf,
    NoMultiWayIf,
    NPlusKPatterns,
    NoNPlusKPatterns,
    NamedFieldPuns,
    NoNamedFieldPuns,
    NamedWildCards,
    NoNamedWildCards,
    NegativeLiterals,
    NoNegativeLiterals,
    NondecreasingIndentation,
    NoNondecreasingIndentation,
    NullaryTypeClasses,
    NoNullaryTypeClasses,
    NumDecimals,
    NoNumDecimals,
    OverlappingInstances,
    NoOverlappingInstances,
    OverloadedLists,
    NoOverloadedLists,
    OverloadedStrings,
    NoOverloadedStrings,
    PackageImports,
    NoPackageImports,
    ParallelArrays,
    NoParallelArrays,
    ParallelListComp,
    NoParallelListComp,
    PartialTypeSignatures,
    NoPartialTypeSignatures,
    PatternGuards,
    NoPatternGuards,
    PatternSignatures,
    NoPatternSignatures,
    PatternSynonyms,
    NoPatternSynonyms,
    PolyKinds,
    NoPolyKinds,
    PolymorphicComponents,
    NoPolymorphicComponents,
    PostfixOperators,
    NoPostfixOperators,
    QuasiQuotes,
    NoQuasiQuotes,
    Rank2Types,
    NoRank2Types,
    RankNTypes,
    NoRankNTypes,
    RebindableSyntax,
    NoRebindableSyntax,
    RecordPuns,
    NoRecordPuns,
    RecordWildCards,
    NoRecordWildCards,
    RecursiveDo,
    NoRecursiveDo,
    RelaxedLayout,
    NoRelaxedLayout,
    RelaxedPolyRec,
    NoRelaxedPolyRec,
    RoleAnnotations,
    NoRoleAnnotations,
    ScopedTypeVariables,
    NoScopedTypeVariables,
    StandaloneDeriving,
    NoStandaloneDeriving,
    StaticPointers,
    NoStaticPointers,
    TemplateHaskell,
    NoTemplateHaskell,
    TraditionalRecordSyntax,
    NoTraditionalRecordSyntax,
    TransformListComp,
    NoTransformListComp,
    TupleSections,
    NoTupleSections,
    TypeFamilies,
    NoTypeFamilies,
    TypeOperators,
    NoTypeOperators,
    TypeSynonymInstances,
    NoTypeSynonymInstances,
    UnboxedTuples,
    NoUnboxedTuples,
    UndecidableInstances,
    NoUndecidableInstances,
    UnicodeSyntax,
    NoUnicodeSyntax,
    UnliftedFFITypes,
    NoUnliftedFFITypes,
    ViewPatterns,
    NoViewPatterns
    = Value
}
