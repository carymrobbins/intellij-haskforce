HaskellTokenType.{-# ('{-#')
WHITE_SPACE (' ')
HaskellTokenType.PRAGMA ('LANGUAGE')
WHITE_SPACE (' ')
HaskellTokenType.PRAGMA ('ForeignFunctionInterface,')
WHITE_SPACE (' ')
HaskellTokenType.PRAGMA ('InterruptibleFFI,')
WHITE_SPACE (' ')
HaskellTokenType.PRAGMA ('CApiFFI')
WHITE_SPACE (' ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('FFI00002')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.foreign ('foreign')
WHITE_SPACE (' ')
HaskellTokenType.import ('import')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('ccall')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('interruptible')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('sleep')
HaskellTokenType." ('"')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('sleep')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CUint')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('IO')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CUint')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.foreign ('foreign')
WHITE_SPACE (' ')
HaskellTokenType.import ('import')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('ccall')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('safe')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('wool-common.h wool_init')
HaskellTokenType." ('"')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('initWool')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CInt')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Ptr')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CString')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('IO')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CInt')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.foreign ('foreign')
WHITE_SPACE (' ')
HaskellTokenType.import ('import')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('jvm')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('interruptible')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('wool-common.h wool_init2')
HaskellTokenType." ('"')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('initWool2')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CInt')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Ptr')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CString')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('IO')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('CInt')
HaskellTokenType.Synthetic rightbrace ('')