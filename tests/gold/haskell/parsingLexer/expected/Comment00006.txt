HaskellTokenType.{- ('{-')
HaskellTokenType.commenttext ('\nmain = 1; ')
HaskellTokenType.commenttext ('{-')
HaskellTokenType.commenttext ('# ANN module ("HLint: ignore Use camelCase" :: String) #')
HaskellTokenType.commenttext ('-}')
HaskellTokenType.commenttext ('\nmain = 1; ')
HaskellTokenType.commenttext ('{-')
HaskellTokenType.commenttext ('# ANN module (1 + (2)) #')
HaskellTokenType.commenttext ('-}')
HaskellTokenType.commenttext ('\n')
HaskellTokenType.-} ('-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Comment00006')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.Synthetic rightbrace ('')