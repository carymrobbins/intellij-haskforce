HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('String00002')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.varidRegexp ('s')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('\\n    \Remove any backslash (except the first one) and put it back.\\n    \The syntax highlighting will break!\\n    \To fix, modify the first line of this string literal.\\n\')
HaskellTokenType." ('"')
HaskellTokenType.Synthetic rightbrace ('')