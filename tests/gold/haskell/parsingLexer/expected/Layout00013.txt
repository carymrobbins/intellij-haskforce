HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Layout00013')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.type ('type')
WHITE_SPACE (' ')
HaskellTokenType.family ('family')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('UnsignedRep')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('a')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.type ('type')
WHITE_SPACE (' ')
HaskellTokenType.instance ('instance')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('UnsignedRep')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Int8')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Word8')
HaskellTokenType.Synthetic rightbrace ('')