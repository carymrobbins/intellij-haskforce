HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('String00003')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.varidRegexp ('s')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('\\n    \Strings should allow \"escaped double quotes\"\\n    \as well as multi-line strings.  Also, the closing\\n    \quote of this string can be preceded by a backslash\\n    \since the backslash indicates line continuation, not\\n    \quote escaping!\\n\')
HaskellTokenType." ('"')
HaskellTokenType.Synthetic rightbrace ('')