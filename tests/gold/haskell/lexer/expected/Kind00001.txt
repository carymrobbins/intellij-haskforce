HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE KindSignatures ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE EmptyDataDecls ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE TypeOperators  ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE UnboxedTuples ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Kind00001')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.type ('type')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Pr')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.(# ('(#')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Int')
HaskellTokenType., (',')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Int')
WHITE_SPACE (' ')
HaskellTokenType.#) ('#)')
WHITE_SPACE ('\n\n')
HaskellTokenType.type ('type')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('T')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.varidRegexp ('f')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.Varsym ('*')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.Varsym ('*')
HaskellTokenType.) (')')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('f')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Int')
WHITE_SPACE ('\n\n')
HaskellTokenType.data ('data')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('S')
WHITE_SPACE ('\n\n')
HaskellTokenType.data ('data')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('a')
WHITE_SPACE (' ')
HaskellTokenType.Consym (':*:')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('b')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Foo')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('a')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('b')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Int')
WHITE_SPACE (' ')
HaskellTokenType.Consym (':*:')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Bool')
WHITE_SPACE ('\n')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Foo')