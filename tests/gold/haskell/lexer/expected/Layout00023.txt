HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Layout00023')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('main')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n    ')
HaskellTokenType.varidRegexp ('putStrLn')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('bam')
WHITE_SPACE ('\n    ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('bam')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('foo')
HaskellTokenType." ('"')