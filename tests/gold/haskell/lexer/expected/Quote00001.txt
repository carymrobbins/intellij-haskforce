HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Quote00001')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('f')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('map')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.Infix varid ('`Declaration`')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Nothing')
HaskellTokenType.) (')')