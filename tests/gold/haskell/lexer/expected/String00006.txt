HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('String00006')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('s')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('\\')
HaskellTokenType.STRINGTOKEN ('\"')
HaskellTokenType." ('"')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('foo')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('undefined')