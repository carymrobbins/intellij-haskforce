Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('List00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('list')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('a')
                PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.,)(',')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('b')
                PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('val')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.integertoken)('0')