Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('OverloadedStrings')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Proc00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Applicative')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('*>')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Concurrent')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Async')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Concurrently')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Conduit')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('await')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('yield')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('$$')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('=$')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Conduit')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Binary')
      PsiElement(HaskellTokenType.as)('as')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('CB')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Conduit')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('List')
      PsiElement(HaskellTokenType.as)('as')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('CL')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Conduit')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Process')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('ClosedStream')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('streamingProcess')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('proc')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('waitForStreamingProcess')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('System')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('IO')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('stdin')
      PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('main')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('IO')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('()')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('main')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('Enter lines of data. I'll base64-encode it.')
                PsiElement(HaskellTokenType.")('"')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('Enter \"quit\" to exit.')
                PsiElement(HaskellTokenType.")('"')
            PAT
              PsiElement(HaskellTokenType.()('(')
              PAT
                PsiElement(HaskellTokenType.()('(')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('toProcess')
                PsiElement(HaskellTokenType.,)(',')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('close')
                PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.,)(',')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('fromProcess')
              PsiElement(HaskellTokenType.,)(',')
              PAT
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('ClosedStream')
              PsiElement(HaskellTokenType.,)(',')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('cph')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('streamingProcess')
              PsiElement(HaskellTokenType.()('(')
              EXP
                PsiElement(HaskellTokenType.varidRegexp)('proc')
                PSTRINGTOKEN
                  PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.STRINGTOKEN)('base64')
                  PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.[)('[')
                PsiElement(HaskellTokenType.])(']')
              PsiElement(HaskellTokenType.))(')')
            EXP
              LETEXP
                PsiElement(HaskellTokenType.let)('let')
                FUNORPATDECL
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('input')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      QVAR
                        QVARID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('CB')
                          PsiElement(HaskellTokenType..)('.')
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('sourceHandle')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('stdin')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('$$')
                      QVAR
                        QVARID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('CB')
                          PsiElement(HaskellTokenType..)('.')
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('lines')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('=$')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('inputLoop')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('=$')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('toProcess')
                FUNORPATDECL
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('inputLoop')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      PsiElement(HaskellTokenType.do)('do')
                      STMTS
                        PAT
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('mbs')
                        PsiElement(HaskellTokenType.<-)('<-')
                        EXP
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('await')
                        EXP
                          PsiElement(HaskellTokenType.case)('case')
                          EXP
                            QVAR
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('mbs')
                          PsiElement(HaskellTokenType.of)('of')
                          ALT
                            PAT
                              QCON
                                QCONID
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Nothing')
                            PsiElement(HaskellTokenType.->)('->')
                            EXP
                              QVAR
                                QVARID
                                  VARID
                                    PsiElement(HaskellTokenType.varidRegexp)('close')
                          ALT
                            PAT
                              QCON
                                QCONID
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Just')
                              PSTRINGTOKEN
                                PsiElement(HaskellTokenType.")('"')
                                PsiElement(HaskellTokenType.STRINGTOKEN)('quit')
                                PsiElement(HaskellTokenType.")('"')
                            PsiElement(HaskellTokenType.->)('->')
                            EXP
                              QVAR
                                QVARID
                                  VARID
                                    PsiElement(HaskellTokenType.varidRegexp)('close')
                          ALT
                            PAT
                              QCON
                                QCONID
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Just')
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('bs')
                            PsiElement(HaskellTokenType.->)('->')
                            EXP
                              PsiElement(HaskellTokenType.do)('do')
                              STMTS
                                EXP
                                  QVAR
                                    QVARID
                                      VARID
                                        PsiElement(HaskellTokenType.varidRegexp)('yield')
                                  QVAR
                                    QVARID
                                      VARID
                                        PsiElement(HaskellTokenType.varidRegexp)('bs')
                                EXP
                                  QVAR
                                    QVARID
                                      VARID
                                        PsiElement(HaskellTokenType.varidRegexp)('inputLoop')
                FUNORPATDECL
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('output')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('fromProcess')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('$$')
                      QVAR
                        QVARID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('CL')
                          PsiElement(HaskellTokenType..)('.')
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('mapM_')
                      PsiElement(HaskellTokenType.()('(')
                      EXP
                        PsiElement(HaskellTokenType.\)('\')
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('bs')
                        PsiElement(HaskellTokenType.->)('->')
                        EXP
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
                          QOP
                            QVAROP
                              QVARSYM
                                VARSYM
                                  PsiElement(HaskellTokenType.$)('$')
                          PSTRINGTOKEN
                            PsiElement(HaskellTokenType.")('"')
                            PsiElement(HaskellTokenType.STRINGTOKEN)('from process: ')
                            PsiElement(HaskellTokenType.")('"')
                          QOP
                            QVAROP
                              QVARSYM
                                VARSYM
                                  PsiElement(HaskellTokenType.Varsym)('++')
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('show')
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('bs')
                      PsiElement(HaskellTokenType.))(')')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('ec')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('runConcurrently')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.$)('$')
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Concurrently')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('input')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('*>')
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Concurrently')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('output')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('*>')
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Concurrently')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('waitForStreamingProcess')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('cph')
              PsiElement(HaskellTokenType.))(')')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.$)('$')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('Process exit code: ')
                PsiElement(HaskellTokenType.")('"')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('show')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('ec')