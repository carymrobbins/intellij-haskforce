Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00010')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('lexStdToken')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Lex')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Token')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('lexStdToken')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            EXP
              PsiElement(HaskellTokenType.case)('case')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('s')
              PsiElement(HaskellTokenType.of)('of')
              ALT
                PAT
                  PsiElement(HaskellTokenType._)('_')
                PsiElement(HaskellTokenType.->)('->')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('7')
        PsiElement(HaskellTokenType.where)('where')
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('lexIdents')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Lex')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      OQTYCON
                        QTYCON
                          TYCON
                            CONID
                              PsiElement(HaskellTokenType.conidRegexp)('String')
                PsiElement(HaskellTokenType.])(']')
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('lexIdents')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              PsiElement(HaskellTokenType.do)('do')
              STMTS
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('exts')