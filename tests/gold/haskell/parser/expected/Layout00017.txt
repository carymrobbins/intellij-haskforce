Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00017')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('foo')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            EXP
              PsiElement(HaskellTokenType.if)('if')
              EXP
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('True')
              PsiElement(HaskellTokenType.then)('then')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
                PSTRINGTOKEN
                  PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.STRINGTOKEN)('yep')
                  PsiElement(HaskellTokenType.")('"')
              PsiElement(HaskellTokenType.else)('else')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('putStrLn')
                PSTRINGTOKEN
                  PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.STRINGTOKEN)('nope')
                  PsiElement(HaskellTokenType.")('"')