Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Record00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('MyRecord')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MyRecord')
        PsiElement(HaskellTokenType.{)('{')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('foo')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('String')
        PsiElement(HaskellTokenType.,)(',')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('bar')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('String')
        PsiElement(HaskellTokenType.})('}')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('setFoo')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('MyRecord')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('String')
            PsiElement(HaskellTokenType.->)('->')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('MyRecord')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('setFoo')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('x')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('s')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.{)('{')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('foo')
          PsiElement(HaskellTokenType.=)('=')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('s')
          PsiElement(HaskellTokenType.})('}')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('setFooAndBar')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('x')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('s1')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('s2')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('setFoo')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('x')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('s')
          PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.{)('{')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('bar')
          PsiElement(HaskellTokenType.=)('=')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('s2')
          PsiElement(HaskellTokenType.})('}')