Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Fun00006')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.hiding)('hiding')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('++')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType..)('.')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('rev')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.[)('[')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.])(']')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('rev')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('xs')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('go')
          PsiElement(HaskellTokenType.[)('[')
          PsiElement(HaskellTokenType.])(']')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('xs')
        PsiElement(HaskellTokenType.where)('where')
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('go')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('acc')
          PsiElement(HaskellTokenType.[)('[')
          PsiElement(HaskellTokenType.])(']')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('acc')
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('go')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('acc')
          PsiElement(HaskellTokenType.()('(')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('x')
            QCONOP
              GCONSYM
                PsiElement(HaskellTokenType.:)(':')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('go')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.:)(':')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.))(')')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
    GENDECL
      VARS
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('++')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.[)('[')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.])(']')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.->)('->')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        PsiElement(HaskellTokenType.[)('[')
        PsiElement(HaskellTokenType.])(']')
      VAROP
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('++')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('ys')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('ys')
    FUNORPATDECL
      PAT
        PsiElement(HaskellTokenType.()('(')
        PAT
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('x')
          QCONOP
            GCONSYM
              PsiElement(HaskellTokenType.:)(':')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('xs')
        PsiElement(HaskellTokenType.))(')')
      VAROP
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('++')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('ys')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.:)(':')
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
            QOP
              QVAROP
                QVARSYM
                  VARSYM
                    PsiElement(HaskellTokenType.Varsym)('++')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('ys')
          PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PAT
        PsiElement(HaskellTokenType.()('(')
        VARSYM
          PsiElement(HaskellTokenType.Varsym)('+++')
        PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            PsiElement(HaskellTokenType.()('(')
            QVARSYM
              VARSYM
                PsiElement(HaskellTokenType.Varsym)('++')
            PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PsiElement(HaskellTokenType.()('(')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      VAROP
        VARSYM
          PsiElement(HaskellTokenType..)('.')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('g')
      PsiElement(HaskellTokenType.))(')')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('x')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('f')
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('g')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.))(')')
    GENDECL
      FIXITY
        PsiElement(HaskellTokenType.infixr)('infixr')
      PsiElement(HaskellTokenType.integertoken)('5')
      OP
        VAROP
          VARSYM
            PsiElement(HaskellTokenType.Varsym)('++')
    GENDECL
      FIXITY
        PsiElement(HaskellTokenType.infix)('infix')
      PsiElement(HaskellTokenType.integertoken)('7')
      OP
        CONOP
          CONSYM
            PsiElement(HaskellTokenType.Consym)(':+')
    GENDECL
      FIXITY
        PsiElement(HaskellTokenType.infixl)('infixl')
      PsiElement(HaskellTokenType.integertoken)('9')
      OP
        VAROP
          VARSYM
            PsiElement(HaskellTokenType.Varsym)('+++')
    GENDECL
      FIXITY
        PsiElement(HaskellTokenType.infix)('infix')
      PsiElement(HaskellTokenType.integertoken)('3')
      OP
        VAROP
          VARSYM
            PsiElement(HaskellTokenType..)('.')