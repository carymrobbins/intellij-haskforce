Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('RankNTypes')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('ScopedTypeVariables')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('StandaloneDeriving')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Fun00007')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.haddock)('-- | Cast a 'Size' to a 'RangeSet'\n')
  BODY
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('sizeToRange')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        PsiElement(HaskellTokenType.forall)('forall')
        TV_BNDR
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType..)('.')
        CTYPE
          CLSCONTEXT
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Type')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.=>)('=>')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Size')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('RangeSet')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('sizeToRange')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('sz')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.case)('case')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('typeRep')
            PsiElement(HaskellTokenType.::)('::')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('TypeRep')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.of)('of')
          ALT
            PAT
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('IntType')
              PsiElement(HaskellTokenType._)('_')
              PsiElement(HaskellTokenType._)('_')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('RangeSet')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('sz')
          ALT
            PAT
              PsiElement(HaskellTokenType._)('_')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Universal')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Typeable')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.))(')')
