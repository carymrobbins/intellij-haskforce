Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Type00006')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    NEWTYPEDECL
      PsiElement(HaskellTokenType.newtype)('newtype')
      TYCON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('MaybeK')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      NEWCONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MaybeK')
        ATYPE
          PsiElement(HaskellTokenType.{)('{')
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('runMaybeK')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.forall)('forall')
              TV_BNDR
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('r')
              PsiElement(HaskellTokenType..)('.')
              CTYPE
                TYPEE
                  ATYPE
                    PsiElement(HaskellTokenType.()('(')
                    CTYPE
                      TYPEE
                        ATYPE
                          TYVAR
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('a')
                        PsiElement(HaskellTokenType.->)('->')
                        TYPEE
                          ATYPE
                            OQTYCON
                              QTYCON
                                TYCON
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Maybe')
                          ATYPE
                            TYVAR
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('r')
                    PsiElement(HaskellTokenType.))(')')
                  PsiElement(HaskellTokenType.->)('->')
                  TYPEE
                    ATYPE
                      OQTYCON
                        QTYCON
                          TYCON
                            CONID
                              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('r')
          PsiElement(HaskellTokenType.})('}')