Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('Arrows')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('RankNTypes')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('UnicodeSyntax')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Unicode00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Arrow')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Monad')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Category')
      PsiElement(HaskellTokenType.as)('as')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Cat')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('List')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Maybe')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('System')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Random')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('map'')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        PsiElement(HaskellTokenType.forall)('∀')
        TV_BNDR
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
        TV_BNDR
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('b')
        PsiElement(HaskellTokenType..)('.')
        CTYPE
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                  PsiElement(HaskellTokenType.->)('→')
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.])(']')
              PsiElement(HaskellTokenType.->)('→')
              TYPEE
                ATYPE
                  PsiElement(HaskellTokenType.[)('[')
                  CTYPE
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('b')
                  PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('map'')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('map')
    NEWTYPEDECL
      PsiElement(HaskellTokenType.newtype)('newtype')
      TYCON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Circuit')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('a')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('b')
      PsiElement(HaskellTokenType.=)('=')
      NEWCONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Circuit')
        ATYPE
          PsiElement(HaskellTokenType.{)('{')
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('unCircuit')
          PsiElement(HaskellTokenType.::)('∷')
          TYPEE
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.()('(')
                CTYPE
                  TYPEE
                    ATYPE
                      OQTYCON
                        QTYCON
                          TYCON
                            CONID
                              PsiElement(HaskellTokenType.conidRegexp)('Circuit')
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('a')
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.,)(',')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.})('}')
    INSTANCEDECL
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Cat')
                PsiElement(HaskellTokenType..)('.')
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Category')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
      PsiElement(HaskellTokenType.where)('where')
      IDECL
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('id')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.$)('$')
              PsiElement(HaskellTokenType.\)('\')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('→')
              EXP
                PsiElement(HaskellTokenType.()('(')
                EXP
                  QVAR
                    QVARID
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Cat')
                      PsiElement(HaskellTokenType..)('.')
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('id')
                PsiElement(HaskellTokenType.,)(',')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.))(')')
      IDECL
        FUNORPATDECL
          PAT
            PsiElement(HaskellTokenType.()('(')
            VARSYM
              PsiElement(HaskellTokenType..)('.')
            PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('dot')
            PsiElement(HaskellTokenType.where)('where')
            FUNORPATDECL
              PAT
                PsiElement(HaskellTokenType.()('(')
                PAT
                  QCON
                    QCONID
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Circuit')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cir2')
                PsiElement(HaskellTokenType.))(')')
              VAROP
                PsiElement(HaskellTokenType.`)('`')
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('dot')
                PsiElement(HaskellTokenType.`)('`')
              PAT
                PsiElement(HaskellTokenType.()('(')
                PAT
                  QCON
                    QCONID
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Circuit')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cir1')
                PsiElement(HaskellTokenType.))(')')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  QCON
                    QCONID
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Circuit')
                  QOP
                    QVAROP
                      QVARSYM
                        VARSYM
                          PsiElement(HaskellTokenType.$)('$')
                  PsiElement(HaskellTokenType.\)('\')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
                  PsiElement(HaskellTokenType.->)('→')
                  EXP
                    LETEXP
                      PsiElement(HaskellTokenType.let)('let')
                      FUNORPATDECL
                        PAT
                          PsiElement(HaskellTokenType.()('(')
                          PAT
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('cir1'')
                          PsiElement(HaskellTokenType.,)(',')
                          PAT
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('b')
                          PsiElement(HaskellTokenType.))(')')
                        RHS
                          PsiElement(HaskellTokenType.=)('=')
                          EXP
                            QVAR
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('cir1')
                            QVAR
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('a')
                      FUNORPATDECL
                        PAT
                          PsiElement(HaskellTokenType.()('(')
                          PAT
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('cir2'')
                          PsiElement(HaskellTokenType.,)(',')
                          PAT
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('c')
                          PsiElement(HaskellTokenType.))(')')
                        RHS
                          PsiElement(HaskellTokenType.=)('=')
                          EXP
                            QVAR
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('cir2')
                            QVAR
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('b')
                      PsiElement(HaskellTokenType.in)('in')
                      EXP
                        PsiElement(HaskellTokenType.()('(')
                        EXP
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('cir2'')
                          QOP
                            QVAROP
                              PsiElement(HaskellTokenType.`)('`')
                              QVARID
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('dot')
                              PsiElement(HaskellTokenType.`)('`')
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('cir1'')
                        PsiElement(HaskellTokenType.,)(',')
                        EXP
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('c')
                        PsiElement(HaskellTokenType.))(')')
    INSTANCEDECL
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Arrow')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
      PsiElement(HaskellTokenType.where)('where')
      IDECL
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('arr')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('f')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.$)('$')
              PsiElement(HaskellTokenType.\)('\')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('→')
              EXP
                PsiElement(HaskellTokenType.()('(')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('arr')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
                PsiElement(HaskellTokenType.,)(',')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.))(')')
      IDECL
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('first')
          PsiElement(HaskellTokenType.()('(')
          PAT
            QCON
              QCONID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Circuit')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('cir')
          PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.$)('$')
              PsiElement(HaskellTokenType.\)('\')
              PsiElement(HaskellTokenType.()('(')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.,)(',')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('d')
              PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.->)('→')
              EXP
                LETEXP
                  PsiElement(HaskellTokenType.let)('let')
                  FUNORPATDECL
                    PAT
                      PsiElement(HaskellTokenType.()('(')
                      PAT
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('cir'')
                      PsiElement(HaskellTokenType.,)(',')
                      PAT
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('c')
                      PsiElement(HaskellTokenType.))(')')
                    RHS
                      PsiElement(HaskellTokenType.=)('=')
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('cir')
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('b')
                  PsiElement(HaskellTokenType.in)('in')
                  EXP
                    PsiElement(HaskellTokenType.()('(')
                    EXP
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('first')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('cir'')
                    PsiElement(HaskellTokenType.,)(',')
                    EXP
                      PsiElement(HaskellTokenType.()('(')
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('c')
                      PsiElement(HaskellTokenType.,)(',')
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('d')
                      PsiElement(HaskellTokenType.))(')')
                    PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      PsiElement(HaskellTokenType._)('_')
      PsiElement(HaskellTokenType.[)('[')
      PsiElement(HaskellTokenType.])(']')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.[)('[')
          PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('cir')
      PsiElement(HaskellTokenType.()('(')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x')
        QCONOP
          GCONSYM
            PsiElement(HaskellTokenType.:)(':')
        PAT
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('xs')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LETEXP
            PsiElement(HaskellTokenType.let)('let')
            FUNORPATDECL
              PAT
                PsiElement(HaskellTokenType.()('(')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cir'')
                PsiElement(HaskellTokenType.,)(',')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('x'')
                PsiElement(HaskellTokenType.))(')')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('unCircuit')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('cir')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.in)('in')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('x'')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.:)(':')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cir'')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('cir')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('inputs')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('snd')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.$)('$')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('mapAccumL')
          PsiElement(HaskellTokenType.()('(')
          EXP
            PsiElement(HaskellTokenType.\)('\')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('cir')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.->)('→')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('unCircuit')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cir')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.))(')')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('cir')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('inputs')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Circuit')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                PsiElement(HaskellTokenType.[)('[')
                CTYPE
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('runCircuit')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('cir')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('inputs')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('snd')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.$)('$')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('mapAccumL')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('unCircuit')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('cir')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('inputs')
    PsiComment(HaskellTokenType.haddock)('-- | Accumulator that outputs a value determined by the supplied function.\n')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('accum')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('acc')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                  PsiElement(HaskellTokenType.->)('→')
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('acc')
                    PsiElement(HaskellTokenType.->)('→')
                    TYPEE
                      ATYPE
                        PsiElement(HaskellTokenType.()('(')
                        CTYPE
                          TYPEE
                            ATYPE
                              TYVAR
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('b')
                        PsiElement(HaskellTokenType.,)(',')
                        CTYPE
                          TYPEE
                            ATYPE
                              TYVAR
                                VARID
                                  PsiElement(HaskellTokenType.varidRegexp)('acc')
                        PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Circuit')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('b')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('accum')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('acc')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('Circuit')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.$)('$')
          PsiElement(HaskellTokenType.\)('\')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('input')
          PsiElement(HaskellTokenType.->)('→')
          EXP
            LETEXP
              PsiElement(HaskellTokenType.let)('let')
              FUNORPATDECL
                PAT
                  PsiElement(HaskellTokenType.()('(')
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('output')
                  PsiElement(HaskellTokenType.,)(',')
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('acc'')
                  PsiElement(HaskellTokenType.))(')')
                RHS
                  PsiElement(HaskellTokenType.=)('=')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('input')
                    QOP
                      QVAROP
                        PsiElement(HaskellTokenType.`)('`')
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('f')
                        PsiElement(HaskellTokenType.`)('`')
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.in)('in')
              EXP
                PsiElement(HaskellTokenType.()('(')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('accum')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('acc'')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
                PsiElement(HaskellTokenType.,)(',')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('output')
                PsiElement(HaskellTokenType.))(')')
    PsiComment(HaskellTokenType.haddock)('-- | Accumulator that outputs the accumulator value.\n')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('accum'')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                  PsiElement(HaskellTokenType.->)('→')
                  TYPEE
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b')
                    PsiElement(HaskellTokenType.->)('→')
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Circuit')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('b')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('accum'')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('acc')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('accum')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('acc')
          PsiElement(HaskellTokenType.()('(')
          EXP
            PsiElement(HaskellTokenType.\)('\')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('b')
            PsiElement(HaskellTokenType.->)('→')
            EXP
              LETEXP
                PsiElement(HaskellTokenType.let)('let')
                FUNORPATDECL
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('b'')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('a')
                      QOP
                        QVAROP
                          PsiElement(HaskellTokenType.`)('`')
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('f')
                          PsiElement(HaskellTokenType.`)('`')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('b')
                PsiElement(HaskellTokenType.in)('in')
                EXP
                  PsiElement(HaskellTokenType.()('(')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b'')
                  PsiElement(HaskellTokenType.,)(',')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('b'')
                  PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('total')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Num')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('⇒')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Circuit')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('total')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('accum'')
          PsiElement(HaskellTokenType.integertoken)('0')
          QVAR
            PsiElement(HaskellTokenType.()('(')
            QVARSYM
              VARSYM
                PsiElement(HaskellTokenType.+)('+')
            PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('mean1')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Fractional')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('⇒')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Circuit')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('mean1')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('total')
            QOP
              QVAROP
                QVARSYM
                  VARSYM
                    PsiElement(HaskellTokenType.Varsym)('&&&')
            PsiElement(HaskellTokenType.()('(')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('const')
              PsiElement(HaskellTokenType.integertoken)('1')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('^>>')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('total')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.Varsym)('>>>')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('arr')
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('uncurry')
            QVAR
              PsiElement(HaskellTokenType.()('(')
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType./)('/')
              PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('mean2')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Fractional')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('⇒')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Circuit')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('mean2')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.varidRegexp)('proc')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('value')
          PsiElement(HaskellTokenType.->)('→')
          EXP
            PsiElement(HaskellTokenType.do)('do')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('t')
              PsiElement(HaskellTokenType.<-)('←')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('total')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('↢')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('value')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('n')
              PsiElement(HaskellTokenType.<-)('←')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('total')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('↢')
                PsiElement(HaskellTokenType.integertoken)('1')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('returnA')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('↢')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('t')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType./)('/')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('n')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('generator')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Random')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('⇒')
        CTYPE
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.,)(',')
              CTYPE
                TYPEE
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.->)('→')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('StdGen')
              PsiElement(HaskellTokenType.->)('→')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Circuit')
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('()')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('generator')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('range')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('rng')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('accum')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('rng')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.$)('$')
          PsiElement(HaskellTokenType.\)('\')
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('()')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('rng')
          PsiElement(HaskellTokenType.->)('→')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('randomR')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('range')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('rng')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('dictionary')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('dog')
                PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.,)(',')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('cat')
                PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.,)(',')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('bird')
                PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.])(']')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('pickWord')
      PsiElement(HaskellTokenType.::)('∷')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('StdGen')
          PsiElement(HaskellTokenType.->)('→')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Circuit')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('()')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('String')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('pickWord')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('rng')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.varidRegexp)('proc')
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('()')
          PsiElement(HaskellTokenType.->)('→')
          EXP
            PsiElement(HaskellTokenType.do)('do')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('idx')
              PsiElement(HaskellTokenType.<-)('←')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('generator')
                PsiElement(HaskellTokenType.()('(')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('0')
                PsiElement(HaskellTokenType.,)(',')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('length')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('dictionary')
                  QOP
                    QVAROP
                      QVARSYM
                        VARSYM
                          PsiElement(HaskellTokenType.-)('-')
                  PsiElement(HaskellTokenType.integertoken)('1')
                PsiElement(HaskellTokenType.))(')')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('rng')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('↢')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('()')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('returnA')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('↢')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('dictionary')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('!!')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('idx')