Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Import00002')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.hiding)('hiding')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('zipWith')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('head')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('fromMaybe')
      PsiElement(HaskellTokenType.,)(',')
      IMPORTT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('isJust')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.as)('as')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('P')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Maybe2')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Just2')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.|)('|')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Nothing2')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('B')
                PsiElement(HaskellTokenType..)('.')
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('ByteString')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('ByteString')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('xs')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('go')
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('B')
                PsiElement(HaskellTokenType..)('.')
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
            PSTRINGTOKEN
              PsiElement(HaskellTokenType.")('"')
              PsiElement(HaskellTokenType.STRINGTOKEN)('here')
              PsiElement(HaskellTokenType.")('"')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.[)('[')
          PsiElement(HaskellTokenType.])(']')
        PsiElement(HaskellTokenType.where)('where')
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('comma')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('pack')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(',')
                PsiElement(HaskellTokenType.")('"')
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('rparen')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('pack')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(')')
                PsiElement(HaskellTokenType.")('"')
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('go')
          PsiElement(HaskellTokenType.()('(')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('h')
          PsiElement(HaskellTokenType.,)(',')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('t')
          PsiElement(HaskellTokenType.))(')')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('acc')
          RHS
            PsiElement(HaskellTokenType.|)('|')
            GUARD
              QVAR
                QVARID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('null')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('t')
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('append')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('concat')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.$)('$')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('reverse')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.))(')')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('h')
            PsiElement(HaskellTokenType.|)('|')
            GUARD
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('otherwise')
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('go')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('wrd')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('rest')
              PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('rparen')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.:)(':')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.as)('as')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.:)(':')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('wrd')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.:)(':')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('h')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.:)(':')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.where)('where')
            FUNORPATDECL
              PAT
                PsiElement(HaskellTokenType.()('(')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.as)('as')
                PsiElement(HaskellTokenType.,)(',')
                PAT
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('rest')
                PsiElement(HaskellTokenType.))(')')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('fixArg')
                  PsiElement(HaskellTokenType.()('(')
                  EXP
                    QVAR
                      QVARID
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('B')
                        PsiElement(HaskellTokenType..)('.')
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('span')
                    PsiElement(HaskellTokenType.()('(')
                    QOP
                      QVAROP
                        QVARSYM
                          VARSYM
                            PsiElement(HaskellTokenType.Varsym)('/=')
                    PsiElement(HaskellTokenType.chartoken)('';'')
                    PsiElement(HaskellTokenType.))(')')
                    QOP
                      QVAROP
                        QVARSYM
                          VARSYM
                            PsiElement(HaskellTokenType.$)('$')
                    QVAR
                      QVARID
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('B')
                        PsiElement(HaskellTokenType..)('.')
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('drop')
                    PsiElement(HaskellTokenType.()('(')
                    EXP
                      QVAR
                        QVARID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('B')
                          PsiElement(HaskellTokenType..)('.')
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('length')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('wrd')
                    PsiElement(HaskellTokenType.))(')')
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('t')
                  PsiElement(HaskellTokenType.))(')')