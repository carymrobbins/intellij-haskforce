Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Lambda1')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('zip'')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('zipWith')
          PsiElement(HaskellTokenType.()('(')
          EXP
            PsiElement(HaskellTokenType.\)('\')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('b')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.,)(',')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')