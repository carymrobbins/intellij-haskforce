Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('RecursiveDo')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00024')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.comment)('-- https://downloads.haskell.org/~ghc/7.2.2/docs/html/users_guide/syntax-extns.html\n')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('justOnes')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          PsiElement(HaskellTokenType.{)('{')
          STMTS
            PsiElement(HaskellTokenType.rec)('rec')
            PsiElement(HaskellTokenType.{)('{')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
              PsiElement(HaskellTokenType.<-)('<-')
              EXP
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Just')
                PsiElement(HaskellTokenType.()('(')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('1')
                  QOP
                    QVAROP
                      QVARSYM
                        VARSYM
                          PsiElement(HaskellTokenType.:)(':')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('xs')
                PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.})('}')
            PsiElement(HaskellTokenType.;)(';')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('return')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('map')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('negate')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('xs')
              PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.})('}')
    PsiComment(HaskellTokenType.comment)('-- Indentation-based variant of above.\n')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('justOnes'')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            PsiElement(HaskellTokenType.rec)('rec')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
              PsiElement(HaskellTokenType.<-)('<-')
              EXP
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Just')
                PsiElement(HaskellTokenType.()('(')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('1')
                  QOP
                    QVAROP
                      QVARSYM
                        VARSYM
                          PsiElement(HaskellTokenType.:)(':')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('xs')
                PsiElement(HaskellTokenType.))(')')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('return')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('map')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('negate')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('xs')
              PsiElement(HaskellTokenType.))(')')
          PsiComment(HaskellTokenType.comment)('-- https://github.com/carymrobbins/intellij-haskforce/issues/264\n')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('grammar')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        PsiElement(HaskellTokenType.forall)('forall')
        TV_BNDR
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('r')
        PsiElement(HaskellTokenType..)('.')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Grammar')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('r')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Prod')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('r')
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('String')
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('String')
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Sentence')
              PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('grammar')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            PsiElement(HaskellTokenType.rec)('rec')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('nounPhrase')
              PsiElement(HaskellTokenType.<-)('<-')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('rule')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.$)('$')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('A_NP')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('adjective')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<*>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('nounPhrase')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<|>')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('N')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('noun')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<|>')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('D_N')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('determiner')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<*>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('noun')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<|>')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('A_N')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('adjective')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<*>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('noun')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<?>')
                PSTRINGTOKEN
                  PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.STRINGTOKEN)('noun phrase')
                  PsiElement(HaskellTokenType.")('"')
            EXP
              LETEXP
                PsiElement(HaskellTokenType.let)('let')
                GENDECL
                  VARS
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('prepPhrase')
                  PsiElement(HaskellTokenType.::)('::')
                  CTYPE
                    TYPEE
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('Prod')
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('r')
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('String')
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('String')
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('PrepPhrase')
                FUNORPATDECL
                  PAT
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('prepPhrase')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      QCON
                        QCONID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('P_NP')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('<$>')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('preposition')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('<*>')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('nounPhrase')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('<?>')
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.STRINGTOKEN)('prepositional phrase')
                        PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.rec)('rec')
            STMTS
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('verbPhrase')
              PsiElement(HaskellTokenType.<-)('<-')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('rule')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.$)('$')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('V_NP')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('verb')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<*>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('nounPhrase')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<|>')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('VP_PP')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('verbPhrase')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<*>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('prepPhrase')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<|>')
                QCON
                  QCONID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('V')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<$>')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('verb')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.Varsym)('<?>')
                PSTRINGTOKEN
                  PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.STRINGTOKEN)('verb phrase')
                  PsiElement(HaskellTokenType.")('"')