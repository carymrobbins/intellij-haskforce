Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Minimal00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('HasFoo')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.where)('where')
      PPRAGMA
        PsiElement(HaskellTokenType.{-#)('{-#')
        PsiElement(HaskellTokenType.PRAGMA)('MINIMAL')
        PsiElement(HaskellTokenType.PRAGMA)('foo')
        PsiElement(HaskellTokenType.#-})('#-}')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('bar')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('HasFoo'')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.where)('where')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo'')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
    PPRAGMA
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('MINIMAL')
      PsiElement(HaskellTokenType.PRAGMA)('foo'')
      PsiElement(HaskellTokenType.#-})('#-}')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('bar'')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('String')
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('HasFoo''')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.where)('where')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo''')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('bar''')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
    PPRAGMA
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('MINIMAL')
      PsiElement(HaskellTokenType.PRAGMA)('foo''')
      PsiElement(HaskellTokenType.#-})('#-}')