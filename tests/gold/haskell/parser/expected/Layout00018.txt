Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00018')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('getDB')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.[)('[')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
            PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('getDB')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('return')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('dirs')
        PsiElement(HaskellTokenType.where)('where')
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('local')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              PsiElement(HaskellTokenType.do)('do')
              STMTS
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('maybe')
                  PsiElement(HaskellTokenType.()('(')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('return')
                    PsiElement(HaskellTokenType.[)('[')
                    PsiElement(HaskellTokenType.])(']')
                  PsiElement(HaskellTokenType.))(')')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
                  PsiElement(HaskellTokenType.()('(')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('maybeHasLibs')
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('flatten')
                  PsiElement(HaskellTokenType.))(')')
        PPRAGMA
          PsiElement(HaskellTokenType.{-#)('{-#')
          PsiElement(HaskellTokenType.PRAGMA)('NOINLINE')
          PsiElement(HaskellTokenType.PRAGMA)('getDB')
          PsiElement(HaskellTokenType.#-})('#-}')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('String')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PSTRINGTOKEN
            PsiElement(HaskellTokenType.")('"')
            PsiElement(HaskellTokenType.STRINGTOKEN)('Hello')
            PsiElement(HaskellTokenType.")('"')