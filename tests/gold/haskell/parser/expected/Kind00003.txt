Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('DataKinds')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('KindSignatures')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('GADTs')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('TypeOperators')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Kind00003')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.{-)('{-')
  PsiComment(HaskellTokenType.commenttext)('\n')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)(' FIXME: Waiting on https://github.com/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('suite/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('src')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('exts/issues/125\ndata HList :: [*] ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> * where\n  HNil  :: HList '[]\n  HCons :: a ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> HList t ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> HList (a ': t)\n\n')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)(' FIXME: Waiting on https://github.com/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('suite/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('src')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('exts/issues/124\ndata Tuple :: (*,*) ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> * where\n  Tuple :: a ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> b ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> Tuple '(a,b)\n')
  PsiComment(HaskellTokenType.-})('-}')
  BODY
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('C1')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            KIND
              BKIND
                AKIND
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Bool')
            PsiComment(HaskellTokenType.{-)('{-')
            PsiComment(HaskellTokenType.commenttext)(' 1 ')
            PsiComment(HaskellTokenType.-})('-}')
            PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.where)('where')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('c')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('proxy')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Int')
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('C2')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.[)('[')
                  KIND
                    BKIND
                      AKIND
                        PsiElement(HaskellTokenType.*)('*')
                  PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.))(')')
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('C3')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.[)('[')
                  KIND
                    BKIND
                      AKIND
                        PsiElement(HaskellTokenType.()('(')
                        KIND
                          BKIND
                            AKIND
                              QTYCON
                                TYCON
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Int')
                        PsiElement(HaskellTokenType.,)(',')
                        KIND
                          BKIND
                            AKIND
                              QTYCON
                                TYCON
                                  CONID
                                    PsiElement(HaskellTokenType.conidRegexp)('Double')
                        PsiElement(HaskellTokenType.))(')')
                  PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.))(')')
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('C4')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.()('(')
                  KIND
                    BKIND
                      AKIND
                        PsiElement(HaskellTokenType.*)('*')
                  PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.))(')')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('X')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.::)('::')
          KIND
            BKIND
              AKIND
                PsiElement(HaskellTokenType.[)('[')
                KIND
                  BKIND
                    AKIND
                      PsiElement(HaskellTokenType.*)('*')
                PsiElement(HaskellTokenType.])(']')
          PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x1')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('X')
            ATYPE
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Int')
              PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x2')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('X')
            ATYPE
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.[)('[')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Int')
              PsiElement(HaskellTokenType.,)(',')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.])(']')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Y')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.::)('::')
          KIND
            BKIND
              AKIND
                PsiElement(HaskellTokenType.()('(')
                KIND
                  BKIND
                    AKIND
                      PsiElement(HaskellTokenType.*)('*')
                PsiElement(HaskellTokenType.,)(',')
                KIND
                  BKIND
                    AKIND
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Bool')
                PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('y1')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Y')
            ATYPE
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.,)(',')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('True')
              PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('y2')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Y')
            ATYPE
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.,)(',')
              CTYPE
                TYPEE
                  ATYPE
                    PsiElement(HaskellTokenType.')(''')
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('False')
              PsiComment(HaskellTokenType.{-)('{-')
              PsiComment(HaskellTokenType.commenttext)('comment')
              PsiComment(HaskellTokenType.-})('-}')
              PsiElement(HaskellTokenType.))(')')