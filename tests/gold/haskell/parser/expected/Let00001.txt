Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00001')
    EXPORTS
      PsiElement(HaskellTokenType.()('(')
      EXPORT
        QVAR
          QVARID
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('everyNth')
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Either')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Time')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Calendar')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('everyNth')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Int')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Either')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('WeekDay')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Int')
            PsiElement(HaskellTokenType.->)('->')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Day')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  PsiElement(HaskellTokenType.[)('[')
                  CTYPE
                    TYPEE
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('Day')
                  PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('everyNth')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('n')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('tp')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('start')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.case)('case')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('tp')
          PsiElement(HaskellTokenType.of)('of')
          ALT
            PAT
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('WeekDay')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('start')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.:)(':')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('everyNth')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('tp')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('addDays')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('n')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('start')
              PsiElement(HaskellTokenType.))(')')
          ALT
            PAT
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Int')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              LETEXP
                PsiElement(HaskellTokenType.let)('let')
                FUNORPATDECL
                  PAT
                    PsiElement(HaskellTokenType.()('(')
                    PAT
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('y')
                    PsiElement(HaskellTokenType.,)(',')
                    PAT
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('m')
                    PsiElement(HaskellTokenType.,)(',')
                    PAT
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('d')
                    PsiElement(HaskellTokenType.))(')')
                  RHS
                    PsiElement(HaskellTokenType.=)('=')
                    EXP
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('toGregorian')
                      PsiElement(HaskellTokenType.()('(')
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('start')
                      PsiElement(HaskellTokenType.))(')')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('start')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.:)(':')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('everyNth')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('tp')
                      QCON
                        QCONID
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('()')