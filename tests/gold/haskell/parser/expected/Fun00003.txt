Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('GADTs')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('KindSignatures')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('RankNTypes')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('ScopedTypeVariables')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('NPlusKPatterns')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('BangPatterns')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('ViewPatterns')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('PatternGuards')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Fun00003')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    INSTANCEDECL
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Show')
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Info')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.where)('where')
      IDECL
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('show')
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('i')
          PsiElement(HaskellTokenType.@)('@')
          PsiElement(HaskellTokenType.()('(')
          PAT
            QCON
              QCONID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Info')
            PsiElement(HaskellTokenType.{)('{')
            PsiElement(HaskellTokenType.})('}')
          PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('show')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('infoType')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('i')
              PsiElement(HaskellTokenType.))(')')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('szStr')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('srcStr')
            PsiElement(HaskellTokenType.where)('where')
            FUNORPATDECL
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('szStr')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  PsiElement(HaskellTokenType.case)('case')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('show')
                    PsiElement(HaskellTokenType.()('(')
                    EXP
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('infoSize')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('i')
                    PsiElement(HaskellTokenType.))(')')
                  PsiElement(HaskellTokenType.of)('of')
                  ALT
                    PAT
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.STRINGTOKEN)('AnySize')
                        PsiElement(HaskellTokenType.")('"')
                    PsiElement(HaskellTokenType.->)('->')
                    EXP
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.")('"')
                  ALT
                    PAT
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('str')
                    PsiElement(HaskellTokenType.->)('->')
                    EXP
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.STRINGTOKEN)(' | ')
                        PsiElement(HaskellTokenType.")('"')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('++')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('str')
            FUNORPATDECL
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('srcStr')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  PsiElement(HaskellTokenType.case)('case')
                  EXP
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('infoSource')
                    QVAR
                      QVARID
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('i')
                  PsiElement(HaskellTokenType.of)('of')
                  ALT
                    PAT
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.")('"')
                    PsiElement(HaskellTokenType.->)('->')
                    EXP
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.")('"')
                  ALT
                    PAT
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('src')
                    PsiElement(HaskellTokenType.->)('->')
                    EXP
                      PSTRINGTOKEN
                        PsiElement(HaskellTokenType.")('"')
                        PsiElement(HaskellTokenType.STRINGTOKEN)(' | ')
                        PsiElement(HaskellTokenType.")('"')
                      QOP
                        QVAROP
                          QVARSYM
                            VARSYM
                              PsiElement(HaskellTokenType.Varsym)('++')
                      QVAR
                        QVARID
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('src')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Set')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('cxt')
          PsiElement(HaskellTokenType.::)('::')
          KIND
            BKIND
              AKIND
                PsiElement(HaskellTokenType.*)('*')
            PsiElement(HaskellTokenType.->)('->')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.()('(')
                  KIND
                    BKIND
                      AKIND
                        PsiElement(HaskellTokenType.*)('*')
                    PsiElement(HaskellTokenType.->)('->')
                    KIND
                      BKIND
                        AKIND
                          PsiElement(HaskellTokenType.*)('*')
                  PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Set')
        ATYPE
          PsiElement(HaskellTokenType.[)('[')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.])(']')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('g2')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              PsiElement(HaskellTokenType.forall)('forall')
              TV_BNDR
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType..)('.')
              CTYPE
                CLSCONTEXT
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Eq')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.=>)('=>')
                CTYPE
                  TYPEE
                    ATYPE
                      PsiElement(HaskellTokenType.[)('[')
                      CTYPE
                        TYPEE
                          ATYPE
                            TYVAR
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('a')
                      PsiElement(HaskellTokenType.])(']')
                    PsiElement(HaskellTokenType.->)('->')
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('a')
                      PsiElement(HaskellTokenType.->)('->')
                      TYPEE
                        ATYPE
                          OQTYCON
                            QTYCON
                              TYCON
                                CONID
                                  PsiElement(HaskellTokenType.conidRegexp)('Bool')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Int')
            PsiElement(HaskellTokenType.->)('->')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Int')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('g2')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('x')
      RHS
        PsiElement(HaskellTokenType.|)('|')
        GUARD
          PAT
            QCON
              QCONID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Just')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('m')
          PsiElement(HaskellTokenType.<-)('<-')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('f')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('undefined')
        PsiElement(HaskellTokenType.,)(',')
        GUARD
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('True')
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('g3')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              PsiElement(HaskellTokenType.forall)('forall')
              TV_BNDR
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType..)('.')
              CTYPE
                CLSCONTEXT
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Eq')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.=>)('=>')
                CTYPE
                  TYPEE
                    ATYPE
                      PsiElement(HaskellTokenType.[)('[')
                      CTYPE
                        TYPEE
                          ATYPE
                            TYVAR
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('a')
                      PsiElement(HaskellTokenType.])(']')
                    PsiElement(HaskellTokenType.->)('->')
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('a')
                      PsiElement(HaskellTokenType.->)('->')
                      TYPEE
                        ATYPE
                          OQTYCON
                            QTYCON
                              TYCON
                                CONID
                                  PsiElement(HaskellTokenType.conidRegexp)('Bool')
            PsiElement(HaskellTokenType.::)('::')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.*)('*')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Int')
            PsiElement(HaskellTokenType.->)('->')
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Int')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('g3')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.\)('\')
          PsiElement(HaskellTokenType.()('(')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.::)('::')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Int')
          PsiElement(HaskellTokenType.,)(',')
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.::)('::')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.->)('->')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('x')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('g')
      PsiElement(HaskellTokenType.()('(')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x')
        PsiElement(HaskellTokenType.::)('::')
        CTYPE
          TYPEE
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('h')
      PsiElement(HaskellTokenType.()('(')
      PAT
        PsiElement(HaskellTokenType.()('(')
        PAT
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('x')
        PsiElement(HaskellTokenType.,)(',')
        PAT
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('y')
        PsiElement(HaskellTokenType.))(')')
        PsiElement(HaskellTokenType.::)('::')
        CTYPE
          TYPEE
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Int')
              PsiElement(HaskellTokenType.,)(',')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Bool')
              PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.,)(',')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.))(')')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('fac')
      PsiElement(HaskellTokenType.()('(')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('n')
        PsiElement(HaskellTokenType.+)('+')
        PsiElement(HaskellTokenType.integertoken)('1')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.()('(')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('n')
            QOP
              QVAROP
                QVARSYM
                  VARSYM
                    PsiElement(HaskellTokenType.+)('+')
            PsiElement(HaskellTokenType.integertoken)('1')
          PsiElement(HaskellTokenType.))(')')
          QOP
            QVAROP
              QVARSYM
                VARSYM
                  PsiElement(HaskellTokenType.*)('*')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('fac')
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('n')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('foc')
      PsiElement(HaskellTokenType.()('(')
      PAT
        PsiElement(HaskellTokenType.-)('-')
        PsiElement(HaskellTokenType.integertoken)('1')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.integertoken)('3')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('lazyFunc')
        PsiElement(HaskellTokenType.,)(',')
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('strictFunc')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('()')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('()')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('lazyFunc')
      PsiElement(HaskellTokenType.~)('~')
      QCON
        QCONID
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('()')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('()')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('strictFunc')
      PsiElement(HaskellTokenType.!)('!')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('v')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('()')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('firstZero')
      PsiElement(HaskellTokenType.()('(')
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('head')
      PsiElement(HaskellTokenType.->)('->')
      PAT
        PsiElement(HaskellTokenType.integertoken)('0')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('True')
