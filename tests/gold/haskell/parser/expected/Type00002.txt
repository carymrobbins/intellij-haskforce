Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Type00002')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    NEWTYPEDECL
      PsiElement(HaskellTokenType.newtype)('newtype')
      TYCON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('GhcModT')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('m')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      NEWCONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('GhcModT')
        ATYPE
          PsiElement(HaskellTokenType.{)('{')
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('unGhcModT')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('StateT')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('GhcModState')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('ErrorT')
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('GhcModError')
                  ATYPE
                    PsiElement(HaskellTokenType.()('(')
                    CTYPE
                      TYPEE
                        ATYPE
                          OQTYCON
                            QTYCON
                              TYCON
                                CONID
                                  PsiElement(HaskellTokenType.conidRegexp)('JournalT')
                        ATYPE
                          OQTYCON
                            QTYCON
                              TYCON
                                CONID
                                  PsiElement(HaskellTokenType.conidRegexp)('GhcModLog')
                        ATYPE
                          PsiElement(HaskellTokenType.()('(')
                          CTYPE
                            TYPEE
                              ATYPE
                                OQTYCON
                                  QTYCON
                                    TYCON
                                      CONID
                                        PsiElement(HaskellTokenType.conidRegexp)('ReaderT')
                              ATYPE
                                OQTYCON
                                  QTYCON
                                    TYCON
                                      CONID
                                        PsiElement(HaskellTokenType.conidRegexp)('GhcModEnv')
                              ATYPE
                                TYVAR
                                  VARID
                                    PsiElement(HaskellTokenType.varidRegexp)('m')
                          PsiElement(HaskellTokenType.))(')')
                    PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.))(')')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Functor')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Applicative')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Alternative')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Monad')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadPlus')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadIO')
      PsiComment(HaskellTokenType.CPPIF)('#if DIFFERENT_MONADIO')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Control')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Monad')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('IO')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Class')
        PsiElement(HaskellTokenType..)('.')
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadIO')
      PsiComment(HaskellTokenType.#endif)('#endif')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadReader')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('GhcModEnv')
      PsiComment(HaskellTokenType.comment)('-- TODO: make MonadReader instance\n')
      PsiComment(HaskellTokenType.comment)('-- pass-through like MonadState\n')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadWriter')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('w')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadError')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('GhcModError')
      PsiElement(HaskellTokenType.))(')')