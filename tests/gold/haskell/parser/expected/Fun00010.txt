Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('RecordWildCards')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('NamedFieldPuns')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Fun00010')
    EXPORTS
      PsiElement(HaskellTokenType.()('(')
      EXPORT
        QTYCON
          TYCON
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QVAR
          QVARID
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QTYCON
          TYCON
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QTYCON
          TYCON
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Permissions')
        PsiElement(HaskellTokenType.()('(')
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Permissions')
        PsiElement(HaskellTokenType.,)(',')
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('readable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('writable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('executable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('searchable')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        PsiElement(HaskellTokenType.module)('module')
        QCONID
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Data')
          PsiElement(HaskellTokenType..)('.')
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('GraphViz')
          PsiElement(HaskellTokenType..)('.')
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Attributes')
          PsiElement(HaskellTokenType..)('.')
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Colors')
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      PAT
        QCON
          QCONID
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Roc')
        PsiElement(HaskellTokenType.{)('{')
        QVAR
          QVARID
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('url')
        PsiElement(HaskellTokenType.=)('=')
        PAT
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('url')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('id')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      PAT
        QCON
          QCONID
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Rac')
        PsiElement(HaskellTokenType.{)('{')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('fun')
    FUNORPATDECL
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      PAT
        QCON
          QCONID
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Ruc')
        PsiElement(HaskellTokenType.{)('{')
        QVAR
          QVARID
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')