Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Export00001')
    EXPORTS
      PsiElement(HaskellTokenType.()('(')
      EXPORT
        QVAR
          PsiElement(HaskellTokenType.()('(')
          QVARSYM
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Prelude')
            VARSYM
              PsiElement(HaskellTokenType.Varsym)('.$')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QVAR
          PsiElement(HaskellTokenType.()('(')
          QVARSYM
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Prelude')
            VARSYM
              PsiElement(HaskellTokenType.Varsym)('.$!')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QVAR
          PsiElement(HaskellTokenType.()('(')
          QVARSYM
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Control')
            PsiElement(HaskellTokenType..)('.')
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Category')
            PsiElement(HaskellTokenType...)('..')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      EXPORT
        QVAR
          QVARID
            CONID
              PsiElement(HaskellTokenType.conidRegexp)('Prelude')
            PsiElement(HaskellTokenType..)('.')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('not')
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    <empty list>