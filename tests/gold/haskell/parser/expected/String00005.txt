Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('String00005')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    INSTANCEDECL
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        CLSCONTEXT
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Show')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('e')
            PsiElement(HaskellTokenType.,)(',')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Show')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('f')
            PsiElement(HaskellTokenType.))(')')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Show')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('UntypedFeldF')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('e')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
              PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.where)('where')
      IDECL
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('show')
          PsiElement(HaskellTokenType.()('(')
          PAT
            QCON
              QCONID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Variable')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('v')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('t')
          PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              PsiElement(HaskellTokenType.chartoken)(''m'')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.:)(':')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('show')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('v')
                QOP
                  QVAROP
                    PsiElement(HaskellTokenType.`)('`')
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('append')
                    PsiElement(HaskellTokenType.`)('`')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('show')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('t')
              PsiElement(HaskellTokenType.))(')')
      IDECL
        FUNORPATDECL
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('show')
          PsiElement(HaskellTokenType.()('(')
          PAT
            QCON
              QCONID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Lambda')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('v')
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('e')
          PsiElement(HaskellTokenType.))(')')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('(')
                PsiElement(HaskellTokenType.STRINGTOKEN)('\\')
                PsiElement(HaskellTokenType.")('"')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('show')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('v')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(' -> ')
                PsiElement(HaskellTokenType.")('"')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('show')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('e')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.Varsym)('++')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(')')
                PsiElement(HaskellTokenType.")('"')
    DEFAULTDECL
      PsiElement(HaskellTokenType.default)('default')
      PsiElement(HaskellTokenType.()('(')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Integer')
      PsiElement(HaskellTokenType.,)(',')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Double')
      PsiElement(HaskellTokenType.))(')')
