Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('ViewPatterns00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.\case)('\case')
          ALT
            PAT
              QCON
                QCONID
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Foo')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.@)('@')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('z')
              PsiElement(HaskellTokenType.()('(')
              PAT
                QVAR
                  QVARID
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('T')
                    PsiElement(HaskellTokenType..)('.')
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('length')
              PsiElement(HaskellTokenType.->)('->')
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('n')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.->)('->')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('n')