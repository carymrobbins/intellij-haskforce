Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('FunctionalDependencies')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Type00004')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Foo')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('c')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('d')
      PsiElement(HaskellTokenType.|)('|')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.->)('->')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('b')
      PsiElement(HaskellTokenType.,)(',')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('c')
      PsiElement(HaskellTokenType.->)('->')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('d')