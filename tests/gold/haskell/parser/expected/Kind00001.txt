Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('KindSignatures')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('EmptyDataDecls')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('TypeOperators')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('UnboxedTuples')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Kind00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    TYPEDECL
      PsiElement(HaskellTokenType.type)('type')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Pr')
      PsiElement(HaskellTokenType.=)('=')
      TYPEE
        ATYPE
          PsiElement(HaskellTokenType.(#)('(#')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Int')
          PsiElement(HaskellTokenType.,)(',')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Int')
          PsiElement(HaskellTokenType.#))('#)')
    TYPEDECL
      PsiElement(HaskellTokenType.type)('type')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('T')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('f')
          PsiElement(HaskellTokenType.::)('::')
          KIND
            BKIND
              AKIND
                PsiElement(HaskellTokenType.*)('*')
            PsiElement(HaskellTokenType.->)('->')
            KIND
              BKIND
                AKIND
                  PsiElement(HaskellTokenType.*)('*')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.=)('=')
      TYPEE
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('f')
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Int')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('S')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
        QTYCONOP
          QTYCONSYM
            QCONSYM
              CONSYM
                PsiElement(HaskellTokenType.Consym)(':*:')
        TYPEE
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('b')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Foo')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('a')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('b')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Int')
          QTYCONOP
            QTYCONSYM
              QCONSYM
                CONSYM
                  PsiElement(HaskellTokenType.Consym)(':*:')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Bool')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('x')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QCON
            QCONID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('Foo')