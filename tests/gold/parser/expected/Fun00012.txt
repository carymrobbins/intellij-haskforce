Haskell File
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('TypeFamilies')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('GADTs')
    PsiElement(HaskellTokenType.#-})('#-}')
  PPRAGMA
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('LANGUAGE')
    PsiElement(HaskellTokenType.PRAGMA)('TransformListComp')
    PsiElement(HaskellTokenType.#-})('#-}')
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Fun00012')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      PsiElement(HaskellTokenType.instance)('instance')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('A')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('M')
        PsiElement(HaskellTokenType.{)('{')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('unA')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('T')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('A')
        PsiElement(HaskellTokenType.})('}')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      PsiElement(HaskellTokenType.instance)('instance')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('B')
      PsiElement(HaskellTokenType.where)('where')
      CON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('K')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('D')
          PsiElement(HaskellTokenType.->)('->')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('B')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType.,)(',')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.|)('|')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
            PsiElement(HaskellTokenType.,)(',')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('ys')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.then)('then')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('sortWith')
            PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('g')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType.,)(',')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.|)('|')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
            PsiElement(HaskellTokenType.,)(',')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('ys')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.then)('then')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('sortWith')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('by')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.+)('+')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('h')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType.,)(',')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.|)('|')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
            PsiElement(HaskellTokenType.,)(',')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('ys')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.then)('then')
            PsiElement(HaskellTokenType.varidRegexp)('group')
            PsiElement(HaskellTokenType.varidRegexp)('using')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('permutations')
            PsiElement(HaskellTokenType.])(']')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('i')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType.,)(',')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.|)('|')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('xs')
            PsiElement(HaskellTokenType.,)(',')
            PAT
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.<-)('<-')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('ys')
            PsiElement(HaskellTokenType.,)(',')
            PsiElement(HaskellTokenType.then)('then')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('group')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('by')
              PsiElement(HaskellTokenType.()('(')
              EXP
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('x')
                QOP
                  QVAROP
                    QVARSYM
                      VARSYM
                        PsiElement(HaskellTokenType.+)('+')
                QVAR
                  QVARID
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('y')
              PsiElement(HaskellTokenType.))(')')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('using')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('groupWith')
            PsiElement(HaskellTokenType.])(']')
    PPRAGMA
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('RULES')
      PsiElement(HaskellTokenType.PRAGMA)('"f"')
      PsiElement(HaskellTokenType.PRAGMA)('f')
      PsiElement(HaskellTokenType.PRAGMA)('True')
      PsiElement(HaskellTokenType.PRAGMA)('=')
      PsiElement(HaskellTokenType.PRAGMA)('False')
      PsiElement(HaskellTokenType.#-})('#-}')