Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Infix00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('val')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.integertoken)('1')
          QOP
            QVAROP
              PsiElement(HaskellTokenType.`)('`')
              QVARID
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Prelude')
                PsiElement(HaskellTokenType..)('.')
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('elem')
              PsiElement(HaskellTokenType.`)('`')
          LISTLIKE
            PsiElement(HaskellTokenType.[)('[')
            EXP
              PsiElement(HaskellTokenType.integertoken)('1')
            PsiElement(HaskellTokenType.,)(',')
            EXP
              PsiElement(HaskellTokenType.integertoken)('2')
            PsiElement(HaskellTokenType.,)(',')
            EXP
              PsiElement(HaskellTokenType.integertoken)('3')
            PsiElement(HaskellTokenType.])(']')