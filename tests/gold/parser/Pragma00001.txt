Haskell File
  HaskellReservedidImpl(RESERVEDID)
    HaskellReservedDeclImpl(RESERVED_DECL)
      PsiElement(HaskellTokenType.varidRegexp)('module')
  HaskellQconidImpl(QCONID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    PsiElement(HaskellTokenType.conid)('Pragma00001')
  HaskellReservedidImpl(RESERVEDID)
    HaskellReservedDeclImpl(RESERVED_DECL)
      PsiElement(HaskellTokenType.varidRegexp)('where')
  HaskellReservedidImpl(RESERVEDID)
    HaskellReservedDeclImpl(RESERVED_DECL)
      PsiElement(HaskellTokenType.varidRegexp)('type')
  HaskellQconidImpl(QCONID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    PsiElement(HaskellTokenType.conid)('Vector')
  HaskellQvaridImpl(QVARID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    HaskellVaridImpl(VARID)
      PsiElement(HaskellTokenType.varidRegexp)('a')
  HaskellQvarsymImpl(QVARSYM)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    HaskellVarsymImpl(VARSYM)
      HaskellSymbolImpl(SYMBOL)
        PsiElement(HaskellTokenType.=)('=')
  HaskellQconidImpl(QCONID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    PsiElement(HaskellTokenType.conid)('Pull')
  HaskellQconidImpl(QCONID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    PsiElement(HaskellTokenType.conid)('DIM1')
  HaskellQvaridImpl(QVARID)
    HaskellModulePrefixImpl(MODULE_PREFIX)
      <empty list>
    HaskellVaridImpl(VARID)
      PsiElement(HaskellTokenType.varidRegexp)('a')
  HaskellPragmaImpl(PRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    HaskellQconidImpl(QCONID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        <empty list>
      PsiElement(HaskellTokenType.conid)('DEPRECATED')
    HaskellQconidImpl(QCONID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        <empty list>
      PsiElement(HaskellTokenType.conid)('Vector')
    PsiElement(HaskellTokenType.stringtoken)('"Use Pull instead"')
    PsiElement(HaskellTokenType.#-})('#-}')